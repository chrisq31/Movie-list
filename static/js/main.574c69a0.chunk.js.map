{"version":3,"sources":["img/clapperBoard.svg","js/components/SiteHeaderView.js","js/components/SiteFooterView.js","js/constants/site-constants.js","js/components/ListViewItem.js","js/selectors/index.js","js/components/ListViewHolder.js","js/components/FilterViewItem.js","js/constants/action-types.js","js/components/FilterViewHolder.js","js/actions/index.js","js/components/GenresSubmitButton.js","js/components/SubmitButtonHolder.js","js/components/LoadingView.js","js/components/App.tsx","js/reducers/siteData.js","js/reducers/genresData.js","js/reducers/index.js","js/sagas/api-saga.js","js/store/index.js","index.tsx"],"names":["module","exports","NavHeader","styled","div","Title","h1","SiteHeaderView","className","NavFooter","SiteFooterView","STATE_POPULAR","STATE_FILTERED","MovieContainer","ImageContainer","Img","img","h2","ListViewItem","this","props","item","title","genres","poster_path","src","alt","React","Component","selectedGenres","state","genresData","genresSelectedList","getSelectedGenresByName","createSelector","_","map","join","getMovies","siteData","movieList","filterState","siteState","length","genresIdArray","filteredArray","forEach","movie","arr1","arr2","movieGenreIds","genre_ids","intersection","push","console","log","MoviesContainer","connect","loadingMovieList","dataLoadingMovieList","loadingGenres","dataLoadingGenreList","movies","key","id","StyledButton","active","FilterViewItem","onClick","isActive","name","GET_MOVIE_DATA","SWITCH_SITE_STATE","MOVIE_LIST_DATA_LOADED","MOVIE_GENRES_DATA_LOADED","API_ERRORED_MOVIE_LIST","API_ERRORED_GENRE_LIST","ADD_GENRE","FilterContainerHolder","FilterContainer","FilterViewHolder","genresList","onGenreClick","genre","dispatch","genreObj","type","payload","TitleCTA","SubmitLogo","clapperBoard","GenresSubmitButton","text","DivContainer","onSubmitClick","ItemsContainer","App","initialState","action","types","results","indexOf","combineReducers","watcherGetMovieList","fetchMovieList","fetchMovieGenresList","rootSaga","takeLatest","call","getMovieListRequest","put","error","axios","get","then","response","data","getMovieGenresRequest","all","initialiseSagaMiddleware","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","rootReducer","run","render","document","getElementById"],"mappings":"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","file":"static/js/main.574c69a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clapperBoard.3feec74b.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst lightColor = \"#ffffff\";\n\nconst primaryFontFamily = \"league_gothicregular\";\n\n\nconst NavHeader = styled.div`\nposition:fixed;\ntop:0;\n\n  width: 100%;\n  min-height: 30px;\n  overflow:hidden;\n  display: flex;\n  align-items: center;\n  background: rgba(243, 10, 10, 0.96); \n  z-index:200;\n`;\n\n\n\nconst Title = styled.h1`\nwhite-space: nowrap;\n  font-size: 4.5rem;\n  text-align: center;\n  color: ${lightColor};\n  font-family: ${primaryFontFamily};\n  font-weight:bold;\n \n   padding-top:30px;\n  \n`;\n\n\nconst SiteHeaderView = () => {\n\n\n\n    return (\n\n        <div className=\"row\">\n            <NavHeader>\n\n                <div className=\"col-8\">\n\n                    <Title>POP MY CORN...PUNK</Title>\n\n                 </div>\n\n            </NavHeader>\n        </div>\n\n\n    )\n\n\n}\n\n\nexport default SiteHeaderView;\n","import React from 'react';\nimport styled from 'styled-components';\nconst lightColor = \"#ffffff\";\n\nconst primaryFontFamily = \"league_gothicregular\";\n\n\nconst NavFooter = styled.div`\nposition:fixed;\nbottom:0;\n\n  width: 100%;\n  min-height: 30px;\n  overflow:hidden;\n  display: flex;\n  align-items: center;\n  background: rgba(243, 10, 10, 0.96); \n  z-index:200;\n`;\n\n\n\nconst Title = styled.h1`\nwhite-space: nowrap;\n  font-size: 1.5rem;\n  text-align: center;\n  color: ${lightColor};\n  font-family: ${primaryFontFamily};\n  font-weight:bold;\n \n   padding-top:10px;\n  \n`;\n\n\nconst SiteFooterView = () => {\n\n\n\n    return (\n\n        <div className=\"row\">\n            <NavFooter>\n\n\n                <div className=\"col-8\">\n\n                    <Title>A CHRIS QUINN PRODUCTION</Title>\n\n                </div>\n\n            </NavFooter>\n        </div>\n\n\n    )\n\n\n}\n\n\nexport default SiteFooterView;\n"," export const BASE_URL_IMAGE = \"https://image.tmdb.org/t/p/w500/\";\n\n\n // site states\n export const STATE_POPULAR =\"STATE_POPULAR\";\n\n export const STATE_FILTERED =\"STATE_FILTERED\";\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BASE_URL_IMAGE } from '../constants/site-constants'\nconst lightColor = \"#ffffff\";\nconst bgColor = \"#f30a0a\";\n\n\nconst primaryFontFamily = \"league_gothicregular\";\n\n\n\nconst MovieContainer = styled.div`\n    width: 70%;\n    height: auto;\n    margin-top:20%;\n    max-width:600px;\n    cursor: pointer;\n    background-color:${bgColor};\n    overflow:hidden;\n    display:flex;\n    flex-direction:column;\n    border:10px;\n    border-radius: 0px 74px 286px 0px;\n    box-shadow: 10px 3px 66px 90px rgba(15, 16, 25, 0.75);\n`;\n\nconst ImageContainer = styled.div`\n display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: auto;\n \n`\n\nconst Img = styled.img`\nmin-width:600px;\n\n`;\n\n\n\n\n\nconst Title = styled.h2`\npadding-top:8%;\nposition:relative;\ntext-transform: uppercase;\nwidth:100%;\n  font-size: 3em;\n  text-align: center;\n  color: ${lightColor};\n  font-family: ${primaryFontFamily};\n\n  \n`;\n\n\n\n\n\nclass ListViewItem extends React.Component {\n\n\n\n\n    render() {\n        const {\n            title,\n            genres,\n            poster_path\n\n\n        } = this.props.item\n\n\n\n        return (\n\n            <div className=\"col\" >\n\n                <MovieContainer>\n                    <Title>{title}</Title>\n                    <div>{genres}</div>\n                    <ImageContainer>\n                        <Img src={BASE_URL_IMAGE + poster_path} alt={title} />\n                    </ImageContainer>\n                </MovieContainer>\n            </div>\n        );\n\n\n    }\n\n\n}\n\nexport default ListViewItem;\n\n\n","import { createSelector } from \"reselect\";\nimport _ from 'lodash';\nimport { STATE_POPULAR, STATE_FILTERED } from '../constants/site-constants'\n\n\nconst movieList = (state) => state.siteData.movieList; // selector for movie genres\n\nconst selectedGenres = (state) => state.genresData.genresSelectedList; // selector genres for filtering\n\nconst siteState = (state) => state.genresData.filterState;\n\nconst separator = \" - \";\n\n\n\nexport const getSelectedGenresByName = createSelector(\n    [selectedGenres],\n    (genres) => {\n        return _.map(genres, 'name').join(separator);\n\n    }\n)\n\nconst getIntersection = (arr1, arr2) => {\n\n    return _.intersection(arr1, arr2);\n}\n\nexport const getMovies = createSelector(\n    [selectedGenres, movieList, siteState],\n    (genres, movieList, siteState) => {\n        \n      switch (siteState) {\n\n            case STATE_POPULAR:\n\n               return movieList;\n\n            case STATE_FILTERED:\n\n\n\n                if (genres.length < 1) return movieList;\n\n                let genresIdArray = _.map(genres, 'id'); // get ids for each gene\n\n                let filteredArray = [];\n\n\n                movieList.forEach(movie => {\n\n                    let movieGenreIds = movie.genre_ids;\n                    // get intersection (common overlap) betwwen two arrays\n                    let result = getIntersection(genresIdArray, movieGenreIds)\n\n                    if (result.length > 0) {\n\n                        filteredArray.push(movie)\n                    }\n\n                }\n\n                )\n\n                return filteredArray;\n\n            default:\n\n                console.log('DEFAULT')\n                return movieList;\n        }\n\n    })\n\n\n\n\n\n\n\n","import { connect } from \"react-redux\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport ListViewItem from \"./ListViewItem\";\nimport { getMovies } from '../selectors/index'\n\n\n\nconst MoviesContainer = styled.div`\ndisplay:flex;\npadding-top:140px;\nbox-sizing:border-box;\npointer-events: none;\n\n\n`;\n\n\nconst ListViewHolder = (props) => {\n\n    const movies = props.movies;\n\n\n\n    if (props.loadingMovieList === true || props.loadingGenres === true) {\n\n        return <div>Loading</div>\n    }\n    return (\n        <MoviesContainer className=\"row\">\n            {movies.map(movie => (\n                <ListViewItem key={movie.id} item={movie} />\n            ))}\n        </MoviesContainer>\n    )\n}\n\n\n\n\n\nconst mapStateToProps = (state) => {\n\n    return {\n        loadingMovieList: state.siteData.dataLoadingMovieList,\n        loadingGenres: state.siteData.dataLoadingGenreList,\n        movies: getMovies(state)\n\n    }\n\n};\n\nexport default connect(mapStateToProps)(ListViewHolder);\n\n\n\n","import React from 'react';\nimport styled from 'styled-components';\n\n\n\nconst StyledButton = styled.div`\n  background-color: ${(props) => props.active ? \"#000000\" : \"#ffffff\"};\n    color: ${(props) => props.active ? \"#ffffff\" : \"#f30a0a\"};\n   border-color: \"#ffffff\";\n   text-align:center;\n    font-size: 4vh;\nbox-sizing:border-box;\n  \n  margin-top: 1em;\n  padding: .025em 1.5em;\n cursor:pointer;\n  border:10px;\n  border-radius: 80px 1px;\n\n\n   overflow:hidden;\n\n\n`;\n\nconst FilterViewItem = ({ onClick, isActive, name }) => (\n\n    <div className=\"col\" onClick={onClick} >\n        <StyledButton active={isActive}> {name}</StyledButton>\n    </div>\n\n\n)\n\nexport default FilterViewItem;","\nexport const GET_MOVIE_DATA=\"GET_MOVIE_DATA\";\n\nexport const GET_GENRE_DATA=\"GET_GENRE_DATA\";\n\nexport const SWITCH_SITE_STATE=\"SWITCH_SITE_STATE\";\n\nexport const SHOW_SUBMIT_GENRES=\"SHOW_SUBMIT_GENRES\";\n\nexport const HIDE_SUBMIT_GENRES=\"HIDE_SUBMIT_GENRES\";\n\nexport const MOVIE_LIST_DATA_LOADED=\"MOVIE_LIST_DATA_LOADED\";\n\nexport const MOVIE_GENRES_DATA_LOADED=\"MOVIE_GENRES_DATA_LOADED\";\n\nexport const API_ERRORED_MOVIE_LIST =\"API_ERRORED_MOVIE_LIST\";\n\nexport const API_ERRORED_GENRE_LIST =\"API_ERRORED_GENRE_LIST\";\n\nexport const APP_READY =\"APP_READY\";\n\nexport const ADD_GENRE = \"ADD_GENRE\";\n\nexport const FILTER_RATING = \"FILTER_RATING\";\n\nexport const SORT_POPULAR = \"SORT_POPULAR\";\n\n\n\n\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport styled from 'styled-components';\nimport FilterViewItem from \"./FilterViewItem\";\nimport { addGenre } from \"../actions/index\";\n\n\nconst bgColor = \"#f90202\";\n\nconst primaryFontFamily = \"league_gothicregular\";\n\nconst FilterContainerHolder = styled.div`\ndisplay:flex;\nposition:fixed;\nflex-direction: row;\nbox-sizing:border-box;\ntop:0;\nmargin-top:30px;\n\n`;\n\n\nconst FilterContainer = styled.div`\n// display:flex;\nposition:relative;\nbox-sizing:border-box;\nwidth:100%;\nheight:100vh;\n\ntop:100px ;\nmargin:0 5%;\nbackground-color:${bgColor};\n\nfont-family: ${primaryFontFamily};\ntext-transform: uppercase;\n`;\n\n\nclass FilterViewHolder extends React.Component {\n\n\n     render() {\n\n\n        const genres = this.props.genresList;\n        const onGenreClick = this.props.onGenreClick;\n\n        if (this.props.loadingMovieList === true || this.props.loadingGenres === true) {\n\n            return <div>Loading</div>\n        }\n\n        return (\n\n            <FilterContainerHolder>\n                <FilterContainer className=\"row\">\n\n                    {genres.map(genre => (\n                        <FilterViewItem key={genre.id} {...genre} onClick={() => onGenreClick({ ...genre })} />\n                    ))}\n                </FilterContainer>\n\n\n\n                <FilterContainer className=\"row\">\n\n                    {genres.map(genre => (\n                        <FilterViewItem key={genre.id} {...genre} onClick={() => onGenreClick({ ...genre })} />\n                    ))}\n                </FilterContainer>\n\n\n            </FilterContainerHolder>\n\n\n        )\n\n    }\n\n\n\n\n\n\n\n}\nconst mapStateToProps = state => ({\n    loadingMovieList: state.siteData.dataLoadingMovieList,\n    loadingGenres: state.siteData.dataLoadingGenreList,\n    genresList: state.siteData.genresList\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onGenreClick: genreObj => dispatch(addGenre(genreObj))\n})\n\n\n\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterViewHolder);\n\n","//action creators\n\nimport { GET_MOVIE_DATA, GET_GENRE_DATA, ADD_GENRE, SHOW_SUBMIT_GENRES, HIDE_SUBMIT_GENRES, FILTER_RATING, SORT_POPULAR, SWITCH_SITE_STATE } from \"../constants/action-types\";\n\n// eg Action and Drama\nexport const addGenre = (payload) => ({\n    type: ADD_GENRE,\n    payload\n\n})\n\nexport const switchState = () => ({\n    type: SWITCH_SITE_STATE\n\n})\n\nexport const showSubmitGenres = () => ({\n    type: SHOW_SUBMIT_GENRES,\n\n})\n\nexport const hideSubmitGenres = () => ({\n    type: HIDE_SUBMIT_GENRES,\n\n})\n\n\n\n// eg movie Rating >=5\nexport const filterByRating = (payload) => ({\n    type: FILTER_RATING,\n    payload\n\n})\n\n\n// eg movie Rating >=5\nexport const sortByPopular = () => ({\n    type: SORT_POPULAR\n\n})\n\n// dispatched from Loading View\nexport const getData = () => ({\n    type: GET_MOVIE_DATA\n})\n\nexport const getGenreData = () => ({\n    type: GET_GENRE_DATA\n})\n\n\n\n\n\n\n\n","import React from 'react';\nimport styled from 'styled-components'\nimport clapperBoard from '../../img/clapperBoard.svg'\n\n\nconst primaryFontFamily = \"league_gothicregular\";\nconst bgColor = \"#f30a0a\";\nconst textColor = \"#ffffff\";\n\n\nconst StyledButton = styled.div`\n\ndisplay:flex;\njustify-content: center;\nalign-items: center;\nbackground-color: ${bgColor};\nbox-sizing:border-box;\n\nmargin: 0;\npadding: .25em 1.5em;\ncursor:pointer;\n\n\nfont-family: ${primaryFontFamily};\ntext-transform: uppercase;\noverflow:hidden;\n\n\nbox-shadow: -28px 18px 85px 32px rgba(245,7,7,0.75)\n\n`;\n\nconst Title = styled.h1`\n  font-size:calc(18px + 1vw);\n  margin-right:5%;\n color: ${textColor};\n  text-align:right;\nline-height:1em;\n  //  white-space: nowrap;\n`;\n\nconst TitleCTA = styled(Title)`\n  color: ${bgColor};\n  text-align: left;\n  font-size:calc(24px + 1vw);\n  margin-top:60%;\n  margin-right:0;\n  margin-left:10%;\n \n`;\n\n\nconst SubmitLogo = styled.div`\n\nmin-width:100px;\nheight:inherit;\ndisplay:block;\n\nbackground-image: url(${clapperBoard});\nbackground-repeat: no-repeat;\n\n\n\n`\n\n\n\nconst ctaText = \"BACK!\"\n\nconst GenresSubmitButton = ({ onClick, isActive, text }) => (\n\n  <div className=\"row\" onClick={onClick} >\n\n    <StyledButton active={isActive}>\n      <Title> {text}</Title>\n      <SubmitLogo>\n        <TitleCTA> {ctaText}</TitleCTA>\n      </SubmitLogo>\n    </StyledButton>\n\n  </div>\n\n\n\n)\n\n\n\n\nexport default GenresSubmitButton;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport styled from 'styled-components';\nimport GenresSubmitButton from './GenresSubmitButton';\nimport{switchState}from \"../actions/index\";\nimport {getSelectedGenresByName} from \"../selectors\"\n\n\n\n\n\nconst DivContainer = styled.div`\n\nposition:fixed;\ndisplay:block;\ntop:5%;\nright:0;\nbox-sizing:border-box;\npadding:0 0;\nz-index:210;\n\n`;\n\n\nconst SubmitButtonHolder = (props) => {\n\n    const onSubmitClick =props.onSubmitClick;\n    const getSelectedGenresByName = props.getSelectedGenresByName;\n\n    if (props.loadingMovieList === true || props.loadingGenres === true) {\n\n        return <div>Loading</div>\n    }\n\n \n\n    if (getSelectedGenresByName.length > 0) {\n\n   \n\n      return (\n      \n            <DivContainer className=\"row\">\n    \n                 <GenresSubmitButton text ={getSelectedGenresByName} onClick={() => onSubmitClick()}/>\n            \n            </DivContainer>\n        )\n         \n     }\n\n     return null;\n\n   \n\n\n   \n}\nconst mapStateToProps = state => ({\n    loadingMovieList: state.siteData.dataLoadingMovieList,\n    loadingGenres: state.siteData.dataLoadingGenreList,\n    getSelectedGenresByName: getSelectedGenresByName(state)\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmitClick: id => dispatch(switchState())\n  })\n\n\n\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SubmitButtonHolder);\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from \"react-redux\";\nimport { getData} from \"../actions/index\";\n\n\nconst ItemsContainer = styled.div`\n    display:flex;\n`;\n\nfunction LoadingView () {\n    return (\n        <ItemsContainer className =\"row\">\n         Loading...\n          </ItemsContainer>\n    )\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return dispatch(getData());\n}\n\nexport default connect(null,mapDispatchToProps)(LoadingView);\n\n","import React from 'react';\nimport '../../styles/index.css';\nimport SiteHeaderView from './SiteHeaderView';\nimport SiteFooterView from './SiteFooterView';\nimport ListViewHolder from './ListViewHolder';\nimport FilterViewHolder from './FilterViewHolder';\nimport SubmitButtonHolder from './SubmitButtonHolder';\nimport LoadingView from './LoadingView';\n\n\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n     <LoadingView />\n     <FilterViewHolder />\n      <ListViewHolder />\n      <SiteHeaderView />\n      <SiteFooterView />\n      <SubmitButtonHolder />\n    </div>\n  );\n}\n\nexport default App;\n","\nimport * as types from '../constants/action-types'\nimport {STATE_POPULAR,STATE_FILTERED}  from '../constants/site-constants'\n\nconst initialState = {\n    dataLoadingMovieList: true,\n    dataLoadingGenreList: true,\n    movieList: [],\n    genresList: []\n\n};\n\n\nfunction siteData(state = initialState, action) {\n\n    let array\n\n\n    switch (action.type) {\n\n        case types.MOVIE_LIST_DATA_LOADED:\n            array = action.payload.results;\n            return { ...state, movieList: array, dataLoadingMovieList: false }\n\n        case types.MOVIE_GENRES_DATA_LOADED:\n            array = action.payload.genres;\n            return { ...state, genresList: array, dataLoadingGenreList: false }\n\n\n        case types.API_ERRORED_MOVIE_LIST:\n\n            console.log('API_ERRORED_MOVIE_LIST')\n            return\n\n        case types.API_ERRORED_GENRE_LIST:\n\n            console.log('API_ERRORED_GENRE_LIST')\n            return\n\n        default:\n            return state\n    }\n\n}\n\nexport default siteData;\n\n\n","\nimport * as types from '../constants/action-types'\nimport { STATE_POPULAR, STATE_FILTERED } from '../constants/site-constants'\nimport _ from 'lodash';\n\nconst initialState = {\n\n    genresSelectedList: [],\n    filterState: STATE_POPULAR\n};\n\n\nfunction genresData(state = initialState, action) {\n    switch (action.type) {\n\n        case types.ADD_GENRE:\n\n            let genresIdArray = _.map(state.genresSelectedList, 'id'); // get ids for each gene tp check not in state\n\n            if (genresIdArray.indexOf(action.payload.id) !== -1) {\n                return state\n            }\n\n            return { ...state, genresSelectedList: [...state.genresSelectedList, action.payload], filterState: STATE_FILTERED }\n\n\n        case types.SWITCH_SITE_STATE:\n\n            return { ...state, genresSelectedList: [], filterState: STATE_POPULAR }\n\n        default:\n            return state\n    }\n\n}\n\nexport default genresData;\n\n\n","  \nimport { combineReducers } from 'redux'\nimport siteData from './siteData';\nimport genresData from './genresData';\n\n\n\nexport default combineReducers({\n    siteData,\n    genresData,\n   \n  })","import { GET_MOVIE_DATA, MOVIE_LIST_DATA_LOADED, API_ERRORED_MOVIE_LIST, MOVIE_GENRES_DATA_LOADED, API_ERRORED_GENRE_LIST } from \"../constants/action-types\";\n\nimport {  takeLatest, call, put, all } from \"redux-saga/effects\";\n\nimport axios from 'axios';\n\n\n\n\n// the 'watcher' - on every 'DATA_REQUESTED' action, run our side effect\nfunction* watcherGetMovieList() {\n    yield takeLatest(GET_MOVIE_DATA, fetchMovieList);\n    yield takeLatest(GET_MOVIE_DATA, fetchMovieGenresList);\n\n\n}\nfunction* fetchMovieList() {\n\n\n\n    try {\n        const payload = yield call(getMovieListRequest)\n\n        yield put({ type: MOVIE_LIST_DATA_LOADED, payload })\n\n    } catch (error) {\n        yield put({ type: API_ERRORED_MOVIE_LIST, error })\n\n    }\n\n}\n\nconst getMovieListRequest = () => {\n\n   \n    const url = \"https://api.themoviedb.org/3/movie/now_playing?api_key=\" + process.env.REACT_APP_API_KEY + \"&language=en-US&page=1\";\n    return axios.get(url).then(response =>\n        response.data\n    );\n}\n\n\n\nfunction* fetchMovieGenresList() {\n\n    try {\n        const payload = yield call(getMovieGenresRequest)\n\n        yield put({ type: MOVIE_GENRES_DATA_LOADED, payload })\n    } catch (error) {\n        yield put({ type: API_ERRORED_GENRE_LIST, error })\n\n    }\n\n}\n\nconst getMovieGenresRequest = () => {\n    const url = \"https://api.themoviedb.org/3/genre/movie/list?api_key=\" + process.env.REACT_APP_API_KEY + \"&language=en-US\";\n    return axios.get(url).then(response =>\n        response.data\n    );\n}\n\n\n\nexport default function* rootSaga() {\n    yield all([\n        watcherGetMovieList()\n\n    ])\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas/api-saga\";\n\nconst initialiseSagaMiddleware = createSagaMiddleware();\n\n// const storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        }) : compose;\n\n\nconst enhancer = composeEnhancers(\n    applyMiddleware( initialiseSagaMiddleware),\n\n    // other store enhancers if any\n);\n\nconst store = createStore(rootReducer, enhancer);\n\n\n\ninitialiseSagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport { render } from \"react-dom\";\n\nimport App from './js/components/App';\nimport { Provider } from \"react-redux\";\nimport store from \"./js/store/index\";\nimport './styles/index.css';\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}