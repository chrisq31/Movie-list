{"version":3,"sources":["img/star.svg","img/popcorn.svg","img/clapperBoard.svg","js/components/SiteHeaderView.js","js/components/SiteFooterView.js","js/constants/action-types.js","js/components/FilterViewItem.js","js/constants/site-constants.js","js/selectors/index.js","js/components/FilterViewCollection.js","js/actions/index.js","js/components/VotingButton.js","js/components/PopularIndexView.js","js/components/ListViewItem.js","js/components/ListViewHolder.js","js/components/ViewContainer.js","js/components/GenresSubmitButton.js","js/components/SubmitButtonHolder.js","js/components/LoadingView.js","js/components/App.tsx","js/reducers/siteData.js","js/reducers/genresData.js","js/reducers/index.js","js/sagas/api-saga.js","js/store/index.js","index.tsx"],"names":["module","exports","NavHeader","styled","div","Title","h1","SiteHeaderView","className","NavFooter","SiteFooterView","GET_MOVIE_DATA","SWITCH_SITE_STATE","MOVIE_LIST_DATA_LOADED","MOVIE_GENRES_DATA_LOADED","API_ERRORED_MOVIE_LIST","API_ERRORED_GENRE_LIST","ADD_GENRE","FILTER_RATING","StyledButton","props","active","FilterViewItem","onClick","isActive","genreName","genreId","STATE_POPULAR","STATE_FILTERED","STATE_RATING","selectedGenres","state","genresData","genresSelectedList","getGenre","filterCollectionarray","genreIds","forEach","element","genreObj","id","siteData","genresList","find","getGenreObjFromId","push","getSelectedGenresByName","createSelector","genres","_","map","join","getMovies","movieList","filterState","siteState","resultArray","orderBy","console","log","length","genresIdArray","filteredArray","movie","arr1","arr2","movieGenreIds","genre_ids","intersection","FilterContainer","FilterViewCollection","onGenreClick","this","genre","index","key","name","React","Component","connect","getGenres","genreArray","dispatch","type","payload","star","VotingButton","voteScore","PopularIndexView","popular","MovieContainer","poster_path","FilterViewCollectionHolder","h2","ListViewItem","item","title","vote_average","popularity","voteObj","MoviesContainer","loadingMovieList","dataLoadingMovieList","loadingGenres","dataLoadingGenreList","movies","ViewContainerHolder","popcorn","Flexcolumn","size","ViewContainer","TitleCTA","SubmitLogo","clapperBoard","GenresSubmitButton","text","DivContainer","onSubmitClick","ItemsContainer","App","initialState","action","types","results","ratingScore","indexOf","combineReducers","watcherGetMovieList","fetchMovieList","fetchMovieGenresList","rootSaga","takeLatest","call","getMovieListRequest","put","error","axios","get","then","response","data","getMovieGenresRequest","all","initialiseSagaMiddleware","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","rootReducer","run","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8fce0b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star.a284c655.svg\";","module.exports = __webpack_public_path__ + \"static/media/popcorn.333c8689.svg\";","module.exports = __webpack_public_path__ + \"static/media/clapperBoard.3feec74b.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst lightColor = \"#ffffff\";\n\nconst primaryFontFamily = \"league_gothicregular\";\n\n\nconst NavHeader = styled.div`\nposition:fixed;\ntop:0;\n\n  width: 100%;\n  min-height: 30px;\n  overflow:hidden;\n  display: flex;\n  align-items: center;\n  background: rgba(114, 125, 30, 0.96); \n  z-index:200;\n`;\n\n\n\nconst Title = styled.h1`\nwhite-space: nowrap;\n  font-size: 4.5rem;\n  text-align: center;\n  color: ${lightColor};\n  font-family: ${primaryFontFamily};\n  font-weight:bold;\n \n   padding-top:30px;\n  \n`;\n\n\nconst SiteHeaderView = () => {\n\n\n\n    return (\n\n        <div className=\"row\">\n            <NavHeader>\n\n                <div className=\"col-8\">\n\n                    <Title>POP MY CORN...PUNK</Title>\n\n                 </div>\n\n            </NavHeader>\n        </div>\n\n\n    )\n\n\n}\n\n\nexport default SiteHeaderView;\n","import React from 'react';\nimport styled from 'styled-components';\nconst lightColor = \"#ffffff\";\n\nconst primaryFontFamily = \"league_gothicregular\";\n\n\nconst NavFooter = styled.div`\nposition:fixed;\nbottom:0;\n\n  width: 100%;\n  min-height: 30px;\n  overflow:hidden;\n  display: flex;\n  align-items: center;\n  background: rgba(114, 125, 30, 0.96); \n  z-index:200;\n`;\n\n\n\nconst Title = styled.h1`\nwhite-space: nowrap;\n  font-size: 1.5rem;\n  text-align: center;\n  color: ${lightColor};\n  font-family: ${primaryFontFamily};\n  font-weight:bold;\n \n   padding-top:10px;\n  \n`;\n\n\nconst SiteFooterView = () => {\n\n\n\n    return (\n\n        <div className=\"row\">\n            <NavFooter>\n\n\n                <div className=\"col-8\">\n\n                    <Title>A CHRIS QUINN PRODUCTION    quinn.uk@gmail.com</Title>\n\n                </div>\n\n            </NavFooter>\n        </div>\n\n\n    )\n\n\n}\n\n\nexport default SiteFooterView;\n","\nexport const GET_MOVIE_DATA=\"GET_MOVIE_DATA\";\n\nexport const GET_GENRE_DATA=\"GET_GENRE_DATA\";\n\nexport const SWITCH_SITE_STATE=\"SWITCH_SITE_STATE\";\n\nexport const SHOW_SUBMIT_GENRES=\"SHOW_SUBMIT_GENRES\";\n\nexport const HIDE_SUBMIT_GENRES=\"HIDE_SUBMIT_GENRES\";\n\nexport const MOVIE_LIST_DATA_LOADED=\"MOVIE_LIST_DATA_LOADED\";\n\nexport const MOVIE_GENRES_DATA_LOADED=\"MOVIE_GENRES_DATA_LOADED\";\n\nexport const API_ERRORED_MOVIE_LIST =\"API_ERRORED_MOVIE_LIST\";\n\nexport const API_ERRORED_GENRE_LIST =\"API_ERRORED_GENRE_LIST\";\n\nexport const APP_READY =\"APP_READY\";\n\nexport const ADD_GENRE = \"ADD_GENRE\";\n\nexport const FILTER_RATING = \"FILTER_RATING\";\n\nexport const SORT_POPULAR = \"SORT_POPULAR\";\n\n\n\n\n","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst primaryFontFamily = \"league_gothicregular\";\n\nconst StyledButton = styled.div`\n  background-color: ${(props) => props.active ? \"#000000\" : \"#ffffff\"};\n    color: ${(props) => props.active ? \"#ffffff\" : \"#f30a0a\"};\n   border-color: \"#ffffff\";\n   font-family: ${primaryFontFamily};\n   text-align:center;\n   font-size: 1.5em;\nbox-sizing:border-box;\n  \n  margin-top: 1em;\n  padding: .025em 1.5em;\n cursor:pointer;\n  border:10px;\n  border-radius: 80px 1px;\n\n\n   overflow:hidden;\n\n\n`;\n\nconst FilterViewItem = ({ onClick, isActive, genreName, genreId }) => (\n\n    <div onClick={onClick} >\n        <StyledButton active={isActive}> {genreName}</StyledButton>\n    </div>\n\n\n)\n\nexport default FilterViewItem;"," export const BASE_URL_IMAGE = \"https://image.tmdb.org/t/p/w500/\";\n\n\n // site states\n export const STATE_POPULAR =\"STATE_POPULAR\";\n\n export const STATE_FILTERED =\"STATE_FILTERED\";\n\n export const STATE_RATING =\"STATE_RATING\";\n\n","import { createSelector } from \"reselect\";\nimport _ from 'lodash';\nimport { STATE_POPULAR, STATE_FILTERED, STATE_RATING} from '../constants/site-constants'\n\n\nconst movieList = (state) => state.siteData.movieList; // selector for movie genres\n\nconst selectedGenres = (state) => state.genresData.genresSelectedList; // selector genres for filtering\n\nconst siteState = (state) => state.genresData.filterState;\n\n\n\nconst separator = \" - \";\n\n\nconst getGenreObjFromId =(id,state) =>{\n\n    let result = state.siteData.genresList.find(element => element.id === id);\n\n    return result;\n\n}\n\n\nconst getGenre = (state, props) => {\n\n    let filterCollectionarray = [];\n\n    props.genreIds.forEach(element => {\n\n      let genreObj = getGenreObjFromId(element,state);\n\n      filterCollectionarray.push(genreObj);\n\n    });\n\n    return filterCollectionarray;\n\n}\n\n\nexport const getGenreArray = () => {\n    return createSelector(\n        [getGenre],\n        (genreArray) => {\n            return genreArray;\n        }\n    )\n\n\n}\n\nexport const getSelectedGenresByName = createSelector(\n    [selectedGenres],\n    (genres) => {\n        return _.map(genres, 'name').join(separator);\n\n    }\n)\n\nconst getIntersection = (arr1, arr2) => {\n\n    // arr1:movielist.genres id\n    // arr2: selected genres id\n\n    return _.intersection(arr1, arr2);\n}\n\n\n\n\n\n\nexport const getMovies = createSelector(\n    [selectedGenres, movieList, siteState],\n    (genres, movieList, siteState) => {\n\n        switch (siteState) {\n\n            case STATE_POPULAR:\n\n            let resultArray = _.map(_.orderBy(movieList, 'popularity','desc'));\n\n            console.log('resultArray ',resultArray)\n\n            return  resultArray;\n            //return movieList;\n\n            case STATE_FILTERED:\n\n                if (genres.length < 1) return movieList;\n\n                let genresIdArray = _.map(genres, 'id'); // get ids for each genre\n\n                let filteredArray = [];\n\n                // need to check intersection meets ALL conditions of selected genres\n                // either can filter complete movieList\n                // or filter previous filtered array for new condition\n\n\n                movieList.forEach(movie => {\n\n                    let movieGenreIds = movie.genre_ids;\n                    // get intersection (common overlap) betwwen two arrays\n                    let result = getIntersection(genresIdArray, movieGenreIds)\n\n                    if (result.length > 0) {\n\n                        filteredArray.push(movie)\n                    }\n\n                }\n\n                )\n\n                return filteredArray;\n\n                case STATE_RATING:\n\n                console.log('get by ratings')\n\n                return \n\n            default:\n\n                console.log('GET MOVIES DEFAULT')\n                return movieList;\n        }\n\n    })\n\n\n\n\n\n\n\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport styled from 'styled-components';\nimport FilterViewItem from \"./FilterViewItem\";\nimport { addGenre } from \"../actions/index\";\nimport {getGenreArray} from \"../selectors/index\";\n\n\n\n\n\n\n\n\nconst FilterContainer = styled.div`\n\ntext-transform: uppercase;\ndisplay:flex;\nflex-direction: column;\nwidth:30%;\n\n`;\n\n// collection component for each movie showing genre buttons\n\nclass FilterViewCollection extends React.Component {\n\n\n     render() {\n    \n        const onGenreClick = this.props.onGenreClick;\n\n         return (\n\n              <FilterContainer>\n\n                    {this.props.genres.map((genre,index) => (\n\n                  <FilterViewItem key={index} genreName={genre.name} genreId={genre.id} onClick={() => onGenreClick({genre})} />\n\n                  \n                    ))}\n                </FilterContainer>\n        )\n\n    }\n}\n\nconst makeMapStateToProps = () => {\n    const getGenres = getGenreArray()\n    const mapStateToProps = (state, props) => {\n      return {\n        genres: getGenres(state, props)\n      }\n    }\n    return mapStateToProps\n  }\n  \n\n\nconst mapDispatchToProps = dispatch => ({\n    onGenreClick: genreObj => dispatch(addGenre(genreObj))\n})\n\n\n\n\n\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(FilterViewCollection);\n\n","//action creators\n\nimport { GET_MOVIE_DATA, GET_GENRE_DATA, ADD_GENRE, SHOW_SUBMIT_GENRES, HIDE_SUBMIT_GENRES, FILTER_RATING, SORT_POPULAR, SWITCH_SITE_STATE } from \"../constants/action-types\";\n\n// eg Action and Drama\nexport const addGenre = (payload) => ({\n    type: ADD_GENRE,\n    payload\n\n})\n\nexport const switchState = () => ({\n    type: SWITCH_SITE_STATE\n\n})\n\nexport const showSubmitGenres = () => ({\n    type: SHOW_SUBMIT_GENRES,\n\n})\n\nexport const hideSubmitGenres = () => ({\n    type: HIDE_SUBMIT_GENRES,\n\n})\n\n\n\n// eg movie Rating >=5\nexport const filterByRating = (payload) => ({\n    type: FILTER_RATING,\n    payload\n\n})\n\n\n// eg movie Rating >=5\nexport const sortByPopular = () => ({\n    type: SORT_POPULAR\n\n})\n\n// dispatched from Loading View\nexport const getData = () => ({\n    type: GET_MOVIE_DATA\n})\n\nexport const getGenreData = () => ({\n    type: GET_GENRE_DATA\n})\n\n\n\n\n\n\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport star from '../../img/star.svg'\n\n\nconst primaryFontFamily = \"league_gothicregular\";\n\nconst StyledButton = styled.div`\n  \n   font-family: ${primaryFontFamily};\n   color:white;\n   text-align:center;\n   font-size: 4.5em;\n   padding: 8%;\n   background-repeat:no-repeat;\n   cursor:pointer;\n   background-image: url(${star});\n   background-position: center;\n   background-size:contain;\n   overflow:hidden;\n`;\n\n\n\nconst VotingButton = ({ onClick, isActive, voteScore}) => (\n\n    <div onClick={onClick} >\n        <StyledButton active={isActive}> {voteScore}</StyledButton>\n    </div>\n\n\n)\n\nexport default VotingButton;","import React from 'react';\nimport styled from 'styled-components';\nimport star from '../../img/star.svg'\n\n\nconst primaryFontFamily = \"league_gothicregular\";\n\nconst StyledButton = styled.div`\n  \n   font-family: ${primaryFontFamily};\n   color:white;\n   text-align:center;\n   font-size: 2em;\n   padding: 8%;\n\n\n`;\n\n\n\nconst PopularIndexView = ({ popular }) => (\n <StyledButton> {popular}</StyledButton>\n)\n\nexport default PopularIndexView;","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from \"react-redux\";\nimport { filterByRating } from \"../actions/index\";\nimport FilterViewCollection from \"./FilterViewCollection\";\nimport VotingButton from \"./VotingButton\";\nimport PopularIndexView from \"./PopularIndexView\";\nimport { BASE_URL_IMAGE } from '../constants/site-constants';\nconst lightColor = \"#ffffff\";\nconst bgColor = \"#f30a0a\";\n\n\nconst primaryFontFamily = \"league_gothicregular\";\n\n\n\nconst MovieContainer = styled.div`\n    width: 40%;\n    height: 650px;\n    margin:5% 5%;\n    max-width:600px;\n    min-width:400px;\n    background-image: url(${props => (BASE_URL_IMAGE + props.poster_path)});\n    background-repeat:no-repeat;\n    background-size:cover;\n    background-color:${bgColor};\n    overflow:hidden;\n    display:flex;\n    flex-direction:column;\n    border:10px;\n    border-radius: 0px 74px 286px 0px;\n    box-shadow:10px 3px 33px 35px rgba(15,16,25,0.33);\n`;\n\n\n\nconst FilterViewCollectionHolder=styled.div`\n\n`\n\nconst Title = styled.h2`\npadding-top:8%;\nposition:relative;\ntext-transform: uppercase;\nwidth:100%;\n  font-size: 4em;\n  text-align: center;\n  color: ${lightColor};\n  font-family: ${primaryFontFamily};\n  background-color: rgba(255, 0, 0, 0.5)\n\n\n`;\n\n\n\n\n\nclass ListViewItem extends React.Component {\n\n        render() {\n        const {\n            title,\n            genre_ids,\n            poster_path,\n            vote_average,\n            popularity\n        \n            } = this.props.item\n\n        const onClick = this.props.onClick;\n        \n        return (\n \n        <MovieContainer poster_path={poster_path}>\n                <Title>{title}</Title>\n\n              <PopularIndexView popular ={popularity} />\n\n                <FilterViewCollectionHolder>\n               \n                    <FilterViewCollection genreIds ={genre_ids} />0\n              \n                </FilterViewCollectionHolder>\n\n                <VotingButton voteScore = {vote_average} onClick={() => onClick({vote_average})} />\n          \n            </MovieContainer>\n\n        );\n\n\n    }\n\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onClick: voteObj => dispatch(filterByRating(voteObj))\n})\n\nexport default connect(null,mapDispatchToProps)(ListViewItem);\n\n\n\n\n","import { connect } from \"react-redux\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport ListViewItem from \"./ListViewItem\";\nimport { getMovies } from '../selectors/index';\n\n\n\nconst MoviesContainer = styled.div`\ndisplay:flex;\njustify-content: center;\npadding:0;\nmargin:0;\n`;\n\n\nconst ListViewHolder = (props) => {\n\n    const movies = props.movies;\n    if (props.loadingMovieList === true || props.loadingGenres === true) {\n\n        return <div>Loading</div>\n    }\n    return (\n        <MoviesContainer className=\"row\">\n            {movies.map((movie,index) => (\n                <ListViewItem key={movie.id} item={movie} popular={index} />\n            ))}\n        </MoviesContainer>\n    )\n}\n\nconst mapStateToProps = (state) => {\n\n    return {\n        loadingMovieList: state.siteData.dataLoadingMovieList,\n        loadingGenres: state.siteData.dataLoadingGenreList,\n        movies: getMovies(state)\n\n    }\n\n};\n\nexport default connect(mapStateToProps)(ListViewHolder);","import React from 'react';\nimport styled from 'styled-components';\n\nimport ListViewHolder from './ListViewHolder';\n\n\nimport popcorn from '../../img/popcorn.svg'\n\nconst ViewContainerHolder = styled.div`\ndisplay:flex;\nflex-flow: row wrap;\npadding-top:100px;\npadding-bottom:100px;\n\njustify-content: center;\n\nbackground-image: url(${popcorn});\nbackground-repeat: repeat-y;\nbackground-size:contain;\n\n\n\n`;\n\n\nconst Flexcolumn = styled.div`\n  text-align: center;\n \n  width: ${(props) => props.size / 12 * 100}vw;\n`\n\n\n\nconst ViewContainer = () => (\n\n    <div className=\"row\" >\n\n        <ViewContainerHolder>\n        <Flexcolumn size={12}>\n        <ListViewHolder />\n        </Flexcolumn>\n      </ViewContainerHolder>\n    </div>\n\n\n)\n\nexport default ViewContainer;","import React from 'react';\nimport styled from 'styled-components'\nimport clapperBoard from '../../img/clapperBoard.svg'\n\n\nconst primaryFontFamily = \"league_gothicregular\";\nconst bgColor = \"#f30a0a\";\nconst textColor = \"#ffffff\";\n\n\nconst StyledButton = styled.div`\n\ndisplay:flex;\njustify-content: center;\nalign-items: center;\nbackground-color: ${bgColor};\nbox-sizing:border-box;\n\nmargin: 0;\npadding: .25em 1.5em;\ncursor:pointer;\n\n\nfont-family: ${primaryFontFamily};\ntext-transform: uppercase;\noverflow:hidden;\n\n\nbox-shadow: -28px 18px 85px 32px rgba(245,7,7,0.75)\n\n`;\n\nconst Title = styled.h1`\n  font-size:calc(18px + 1vw);\n  margin-right:5%;\n color: ${textColor};\n  text-align:right;\nline-height:1em;\n  //  white-space: nowrap;\n`;\n\nconst TitleCTA = styled(Title)`\n  color: ${bgColor};\n  text-align: left;\n  font-size:calc(24px + 1vw);\n  margin-top:60%;\n  margin-right:0;\n  margin-left:10%;\n \n`;\n\n\nconst SubmitLogo = styled.div`\n\nmin-width:100px;\nheight:inherit;\ndisplay:block;\n\nbackground-image: url(${clapperBoard});\nbackground-repeat: no-repeat;\n\n\n\n`\n\n\n\nconst ctaText = \"BACK!\"\n\nconst GenresSubmitButton = ({ onClick, isActive, text }) => (\n\n  <div className=\"row\" onClick={onClick} >\n\n    <StyledButton active={isActive}>\n      <Title> {text}</Title>\n      <SubmitLogo>\n        <TitleCTA> {ctaText}</TitleCTA>\n      </SubmitLogo>\n    </StyledButton>\n\n  </div>\n\n\n\n)\n\n\n\n\nexport default GenresSubmitButton;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport styled from 'styled-components';\nimport GenresSubmitButton from './GenresSubmitButton';\nimport{switchState}from \"../actions/index\";\nimport {getSelectedGenresByName} from \"../selectors\"\n\n\n\n\n\nconst DivContainer = styled.div`\n\nposition:fixed;\ndisplay:block;\ntop:5%;\nright:0;\nbox-sizing:border-box;\npadding:0 0;\nz-index:210;\n\n`;\n\n\nconst SubmitButtonHolder = (props) => {\n\n    const onSubmitClick =props.onSubmitClick;\n    const getSelectedGenresByName = props.getSelectedGenresByName;\n\n    if (props.loadingMovieList === true || props.loadingGenres === true) {\n\n        return <div>Loading</div>\n    }\n\n \n\n    if (getSelectedGenresByName.length > 0) {\n\n   \n\n      return (\n      \n            <DivContainer className=\"row\">\n    \n                 <GenresSubmitButton text ={getSelectedGenresByName} onClick={() => onSubmitClick()}/>\n            \n            </DivContainer>\n        )\n         \n     }\n\n     return null;\n\n   \n\n\n   \n}\nconst mapStateToProps = state => ({\n    loadingMovieList: state.siteData.dataLoadingMovieList,\n    loadingGenres: state.siteData.dataLoadingGenreList,\n    getSelectedGenresByName: getSelectedGenresByName(state)\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmitClick: id => dispatch(switchState())\n  })\n\n\n\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SubmitButtonHolder);\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from \"react-redux\";\nimport { getData} from \"../actions/index\";\n\n\nconst ItemsContainer = styled.div`\n    display:flex;\n`;\n\nfunction LoadingView () {\n    return (\n        <ItemsContainer className =\"row\">\n         Loading...\n          </ItemsContainer>\n    )\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return dispatch(getData());\n}\n\nexport default connect(null,mapDispatchToProps)(LoadingView);\n\n","import React from 'react';\nimport '../../styles/index.css';\nimport SiteHeaderView from './SiteHeaderView';\nimport SiteFooterView from './SiteFooterView';\n// import ListViewHolder from './ListViewHolder';\n// import FilterViewHolder from './FilterViewHolder';\nimport ViewContainer from './ViewContainer';\nimport SubmitButtonHolder from './SubmitButtonHolder';\nimport LoadingView from './LoadingView';\n\n\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n     <LoadingView />\n      <ViewContainer />\n      <SiteHeaderView />\n      <SiteFooterView />\n      <SubmitButtonHolder />\n    </div>\n  );\n}\n\nexport default App;\n","\nimport * as types from '../constants/action-types'\nimport {STATE_POPULAR,STATE_FILTERED}  from '../constants/site-constants'\n\nconst initialState = {\n    dataLoadingMovieList: true,\n    dataLoadingGenreList: true,\n    movieList: [],\n    genresList: []\n\n};\n\n\nfunction siteData(state = initialState, action) {\n\n    let array\n\n\n    switch (action.type) {\n\n        case types.MOVIE_LIST_DATA_LOADED:\n            array = action.payload.results;\n            return { ...state, movieList: array, dataLoadingMovieList: false }\n\n        case types.MOVIE_GENRES_DATA_LOADED:\n            array = action.payload.genres;\n            return { ...state, genresList: array, dataLoadingGenreList: false }\n\n\n        case types.API_ERRORED_MOVIE_LIST:\n\n            console.log('API_ERRORED_MOVIE_LIST')\n            return\n\n        case types.API_ERRORED_GENRE_LIST:\n\n            console.log('API_ERRORED_GENRE_LIST')\n            return\n\n        default:\n            return state\n    }\n\n}\n\nexport default siteData;\n\n\n","\nimport * as types from '../constants/action-types'\nimport { STATE_POPULAR, STATE_FILTERED, STATE_RATING } from '../constants/site-constants'\nimport _ from 'lodash';\n\n//TODO refactor this to be reflective of all filter state eg genre, popularity\n\nconst initialState = {\n\n    genresSelectedList: [],\n    ratingScore: [0],\n    filterState: STATE_POPULAR\n};\n\n\nfunction genresData(state = initialState, action) {\n    switch (action.type) {\n\n        case types.ADD_GENRE:\n\n            let genresIdArray = _.map(state.genresSelectedList, 'id'); // get ids for each gene tp check not in state\n\n            if (genresIdArray.indexOf(action.payload.genre.id) !== -1) {\n                return state\n            }\n\n            return { ...state, genresSelectedList: [...state.genresSelectedList, action.payload.genre], filterState: STATE_FILTERED }\n\n\n\n        case types.FILTER_RATING:\n\n\n\n            return { ...state, ratingScore: [...state.ratingScore, action.payload], filterState: STATE_RATING }\n\n        case types.SWITCH_SITE_STATE:\n\n            return { ...state, genresSelectedList: [], filterState: STATE_POPULAR }\n\n        default:\n            return state\n    }\n\n}\n\nexport default genresData;\n\n\n","  \nimport { combineReducers } from 'redux'\nimport siteData from './siteData';\nimport genresData from './genresData';\n\n\n\nexport default combineReducers({\n    siteData,\n    genresData,\n   \n  })","import { GET_MOVIE_DATA, MOVIE_LIST_DATA_LOADED, API_ERRORED_MOVIE_LIST, MOVIE_GENRES_DATA_LOADED, API_ERRORED_GENRE_LIST } from \"../constants/action-types\";\n\nimport {  takeLatest, call, put, all } from \"redux-saga/effects\";\n\nimport axios from 'axios';\n\n\n\n\n// the 'watcher' - on every 'DATA_REQUESTED' action, run our side effect\nfunction* watcherGetMovieList() {\n    yield takeLatest(GET_MOVIE_DATA, fetchMovieList);\n    yield takeLatest(GET_MOVIE_DATA, fetchMovieGenresList);\n\n\n}\nfunction* fetchMovieList() {\n\n\n\n    try {\n        const payload = yield call(getMovieListRequest)\n\n        yield put({ type: MOVIE_LIST_DATA_LOADED, payload })\n\n    } catch (error) {\n        yield put({ type: API_ERRORED_MOVIE_LIST, error })\n\n    }\n\n}\n\nconst getMovieListRequest = () => {\n\n   \n    const url = \"https://api.themoviedb.org/3/movie/now_playing?api_key=\" + process.env.REACT_APP_API_KEY + \"&language=en-US&page=1\";\n    return axios.get(url).then(response =>\n        response.data\n    );\n}\n\n\n\nfunction* fetchMovieGenresList() {\n\n    try {\n        const payload = yield call(getMovieGenresRequest)\n\n        yield put({ type: MOVIE_GENRES_DATA_LOADED, payload })\n    } catch (error) {\n        yield put({ type: API_ERRORED_GENRE_LIST, error })\n\n    }\n\n}\n\nconst getMovieGenresRequest = () => {\n    const url = \"https://api.themoviedb.org/3/genre/movie/list?api_key=\" + process.env.REACT_APP_API_KEY + \"&language=en-US\";\n    return axios.get(url).then(response =>\n        response.data\n    );\n}\n\n\n\nexport default function* rootSaga() {\n    yield all([\n        watcherGetMovieList()\n\n    ])\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas/api-saga\";\n\nconst initialiseSagaMiddleware = createSagaMiddleware();\n\n// const storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        }) : compose;\n\n\nconst enhancer = composeEnhancers(\n    applyMiddleware( initialiseSagaMiddleware),\n\n    // other store enhancers if any\n);\n\nconst store = createStore(rootReducer, enhancer);\n\n\n\ninitialiseSagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport { render } from \"react-dom\";\n\nimport App from './js/components/App';\nimport { Provider } from \"react-redux\";\nimport store from \"./js/store/index\";\nimport './styles/index.css';\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}