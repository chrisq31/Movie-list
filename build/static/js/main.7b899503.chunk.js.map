{"version":3,"sources":["img/clapperBoard.svg","img/star.svg","img/popcorn.svg","js/components/BackButton.js","js/constants/action-types.js","js/constants/site-constants.js","js/selectors/index.js","js/components/SiteHeaderView.js","js/actions/index.js","js/components/SiteFooterView.js","js/components/FilterViewItem.js","js/components/FilterViewCollection.js","js/components/VotingButton.js","js/components/ListViewItem.js","js/components/ListViewHolder.js","js/components/ViewContainer.js","js/components/LoadingView.js","js/components/App.tsx","js/reducers/siteData.js","js/reducers/filteredData.js","js/reducers/index.js","js/sagas/api-saga.js","js/store/index.js","index.tsx"],"names":["module","exports","StyledButton","styled","div","Title","h1","TitleCTA","SubmitLogo","clapperBoard","BackButton","onClick","isActive","text","className","active","GET_MOVIE_DATA","SWITCH_SITE_STATE","MOVIE_LIST_DATA_LOADED","MOVIE_GENRES_DATA_LOADED","API_ERRORED_MOVIE_LIST","API_ERRORED_GENRE_LIST","ADD_REMOVE_GENRE","FILTER_RATING","STATE_FILTERED","STATE_RATING","selectedGenres","state","filteredData","genresSelectedList","getGenre","props","filterCollectionarray","genreIds","forEach","element","genreObj","id","genresSelected","result","siteData","genresList","find","getGenreObjFromId","push","getSelectedGenresByName","createSelector","genres","_","map","join","getMovies","movieList","filterState","ratingScore","siteState","rating","orderBy","length","genresIdArray","filteredArray","movie","movieGenreIds","genre_ids","every","v","includes","ratingsArray","filter","vote_average","console","log","NavHeader","connect","loadingMovieList","dataLoadingMovieList","loadingGenres","dataLoadingGenreList","dispatch","onSubmitClick","type","NavFooter","SiteFooterView","FilterViewItem","genreName","genreId","FilterContainer","FilterViewCollection","onGenreClick","this","genre","index","key","name","React","Component","getGenres","genreArray","payload","ImageDiv","TextDiv","VotingButton","voteScore","src","star","alt","MovieContainer","poster_path","h2","RatingContainer","ListViewItem","item","title","popularity","voteObj","MoviesContainer","movies","popular","ViewContainerHolder","popcorn","Flexcolumn","size","ViewContainer","ItemsContainer","App","initialState","error","action","types","results","genresSelectedIdArray","searchIndex","indexOf","combineReducers","watcherGetMovieList","fetchMovieList","fetchMovieGenresList","rootSaga","takeLatest","call","getMovieListRequest","put","axios","get","then","response","data","getMovieGenresRequest","all","initialiseSagaMiddleware","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","rootReducer","run","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b899503.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clapperBoard.3feec74b.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.e356e09a.svg\";","module.exports = __webpack_public_path__ + \"static/media/popcorn.88469b6d.svg\";","import React from 'react';\nimport styled from 'styled-components'\nimport clapperBoard from '../../img/clapperBoard.svg'\n\n\nconst primaryFontFamily = \"league_gothicregular\";\n\nconst textColor = \"#ffffff\";\n\n\nconst StyledButton = styled.div`\n\ndisplay:flex;\njustify-content: center;\nalign-items: center;\nbackground: rgba(33, 14, 14, 0.96);  \nbox-sizing:border-box;\n\nmargin: 0;\npadding: .25em 1.5em;\ncursor:pointer;\n\n\nfont-family: ${primaryFontFamily};\ntext-transform: uppercase;\noverflow:hidden;\n\nborder-radius: 80px 1px;\n\n\nbox-shadow: -28px 18px 85px 32px rgba(245,7,7,0.75)\n\n`;\n\nconst Title = styled.h1`\n  font-size:calc(18px + 1vw);\n  margin-right:5%;\n color: ${textColor};\n  text-align:right;\nline-height:1em;\n\n`;\n\nconst TitleCTA = styled(Title)`\n  color: black;\n  text-align: left;\n  font-size:calc(24px + 1vw);\n  margin-top:60%;\n  margin-right:0;\n  margin-left:10%;\n \n`;\n\n\nconst SubmitLogo = styled.div`\n\nmin-width:100px;\nheight:inherit;\ndisplay:block;\n\nbackground-image: url(${clapperBoard});\nbackground-repeat: no-repeat;\n\n\n\n`\n\n\n\nconst ctaText = \"CUT!\"\n\nconst BackButton = ({ onClick, isActive, text }) => (\n\n  <div className=\"row\" onClick={onClick} >\n\n    <StyledButton active={isActive}>\n      <Title> {text}</Title>\n      <SubmitLogo>\n        <TitleCTA> {ctaText}</TitleCTA>\n      </SubmitLogo>\n    </StyledButton>\n\n  </div>\n\n\n\n)\n\n\n\n\nexport default BackButton;","\nexport const GET_MOVIE_DATA=\"GET_MOVIE_DATA\";\n\nexport const GET_GENRE_DATA=\"GET_GENRE_DATA\";\n\nexport const SWITCH_SITE_STATE=\"SWITCH_SITE_STATE\";\n\nexport const SHOW_SUBMIT_GENRES=\"SHOW_SUBMIT_GENRES\";\n\nexport const HIDE_SUBMIT_GENRES=\"HIDE_SUBMIT_GENRES\";\n\nexport const MOVIE_LIST_DATA_LOADED=\"MOVIE_LIST_DATA_LOADED\";\n\nexport const MOVIE_GENRES_DATA_LOADED=\"MOVIE_GENRES_DATA_LOADED\";\n\nexport const API_ERRORED_MOVIE_LIST =\"API_ERRORED_MOVIE_LIST\";\n\nexport const API_ERRORED_GENRE_LIST =\"API_ERRORED_GENRE_LIST\";\n\nexport const APP_READY =\"APP_READY\";\n\nexport const ADD_REMOVE_GENRE = \"ADD_REMOVE_GENRE\";\n\nexport const FILTER_RATING = \"FILTER_RATING\";\n\nexport const SORT_POPULAR = \"SORT_POPULAR\";\n\n\n\n\n"," export const BASE_URL_IMAGE = \"https://image.tmdb.org/t/p/w500/\";\n\n\n // site states\n export const STATE_POPULAR =\"STATE_POPULAR\";\n\n export const STATE_FILTERED =\"STATE_FILTERED\";\n\n export const STATE_RATING =\"STATE_RATING\";\n\n","import { createSelector } from \"reselect\";\nimport _ from 'lodash';\nimport { STATE_POPULAR, STATE_FILTERED, STATE_RATING } from '../constants/site-constants'\n\n\nconst movieList = (state) => state.siteData.movieList; // selector for movie genres\n\nconst selectedGenres = (state) => state.filteredData.genresSelectedList; // selector genres for filtering\n\nconst ratingScore = (state) => state.filteredData.ratingScore; // selector ratings for filtering\n\nconst siteState = (state) => state.filteredData.filterState;\n\n\n\nconst separator = \" - \";\n\n\nconst getGenreObjFromId = (id, state) => {\n\n    \n    let genresSelected = state.filteredData.genresSelectedList;\n\n \n\n    let result = state.siteData.genresList.find(element => element.id === id);\n    result.active =false;\n\n\n    genresSelected.forEach(element => {\n \n\n        if (element.id === result.id){\n\n          \n            result.active =true;\n        }\n\n  \n\n    })\n\n    return result;\n\n}\n\n\nconst getGenre = (state, props) => {\n\n    let filterCollectionarray = [];\n\n    props.genreIds.forEach(element => {\n\n        \n\n        let genreObj = getGenreObjFromId(element, state);\n\n        filterCollectionarray.push(genreObj);\n\n    });\n\n    \n\n    return filterCollectionarray;\n\n}\n\n\nexport const getGenreArray = () => {\n    return createSelector(\n        [getGenre],\n        (genreArray) => {\n            return genreArray;\n        }\n    )\n\n\n}\n\n// returns genres names selected \nexport const getSelectedGenresByName = createSelector(\n    [selectedGenres],\n    (genres) => {\n        return _.map(genres, 'name').join(separator);\n\n    }\n)\n\n\n\n\n\n\n\nexport const getMovies = createSelector(\n    [selectedGenres, movieList, siteState, ratingScore],\n    (genres, movieList, siteState, rating) => {\n\n        let resultArray;\n\n        switch (siteState) {\n\n\n\n            case STATE_POPULAR:\n                // return movielist sorted on popularity\n\n                resultArray = _.map(_.orderBy(movieList, 'popularity', 'desc'));\n\n                return resultArray;\n\n\n            case STATE_FILTERED:\n\n\n\n                if (genres.length < 1) return movieList;\n\n                let genresIdArray = _.map(genres, 'id'); // get ids for each genre\n\n            \n\n                let filteredArray = [];\n\n                movieList.forEach(movie => {\n\n                    let movieGenreIds = movie.genre_ids;\n\n\n                    let result = genresIdArray.every(v => movieGenreIds.includes(v));\n\n                    if (result) {\n                        filteredArray.push(movie);\n                    }\n\n\n\n                }\n\n                )\n\n\n\n                return filteredArray;\n\n            case STATE_RATING:\n\n                // only show movies equal or above rating\n\n                let ratingsArray = _.map(_.orderBy(movieList, 'vote_average', 'desc'));\n\n\n\n                resultArray = _.filter(ratingsArray, ({ vote_average }) => vote_average >= rating[rating.length - 1]);\n\n\n\n                return resultArray\n\n            default:\n\n                console.log('GET MOVIES DEFAULT')\n                return movieList;\n        }\n\n    })\n\n\n\n\n\n\n\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport styled from 'styled-components';\nimport BackButton from './BackButton';\nimport { switchState } from \"../actions/index\";\nimport { getSelectedGenresByName } from \"../selectors\"\n\nconst lightColor = \"#ec1515\";\n\nconst primaryFontFamily = \"league_gothicregular\";\n\n\nconst NavHeader = styled.div`\nposition:fixed;\ntop:0;\n\n  width: 100%;\n  min-height: 30px;\n  overflow:hidden;\n  display: flex;\n  align-items: center;\n  background: rgba(33, 0, 14, 0.92); \n  z-index:200;\n`;\n\n\n\nconst Title = styled.h1`\nwhite-space: nowrap;\n  font-size: 4.5rem;\n  text-align: center;\n  color: ${lightColor};\n  font-family: ${primaryFontFamily};\n  font-weight:bold;\n \n   padding-top:30px;\n  \n`;\n\n\n\n\n\nconst SiteHeaderView = (props) => {\n\n\n    const onSubmitClick = props.onSubmitClick;\n    const getSelectedGenresByName = props.getSelectedGenresByName;\n\n    if (props.loadingMovieList === true || props.loadingGenres === true) {\n\n        return <div>Loading</div>\n    }\n\n\n\n    if (getSelectedGenresByName.length > -1) {\n\n\n\n        return (\n\n            <div className=\"row\">\n                <NavHeader>\n\n                    <div className=\"col-8\">\n\n                        <Title>POP MY CORN...PUNK</Title>\n\n                    </div>\n\n                    <div className=\"col-4\">\n\n                        <BackButton text={getSelectedGenresByName} onClick={() => onSubmitClick()} />\n\n                    </div>\n\n                </NavHeader>\n            </div>\n\n\n        )\n\n    }\n\n    return null;\n\n}\n\n\nconst mapStateToProps = state => ({\n    loadingMovieList: state.siteData.dataLoadingMovieList,\n    loadingGenres: state.siteData.dataLoadingGenreList,\n    getSelectedGenresByName: getSelectedGenresByName(state)\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmitClick: id => dispatch(switchState())\n})\n\n\n\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SiteHeaderView);\n\n\n","//action creators\n\nimport { GET_MOVIE_DATA, GET_GENRE_DATA, ADD_REMOVE_GENRE, SHOW_SUBMIT_GENRES, HIDE_SUBMIT_GENRES, FILTER_RATING, SORT_POPULAR, SWITCH_SITE_STATE } from \"../constants/action-types\";\n\n// eg Action and Drama\nexport const addGenre = (payload) => ({\n    type: ADD_REMOVE_GENRE,\n    payload\n\n})\n\nexport const switchState = () => ({\n    type: SWITCH_SITE_STATE\n\n})\n\nexport const showSubmitGenres = () => ({\n    type: SHOW_SUBMIT_GENRES,\n\n})\n\nexport const hideSubmitGenres = () => ({\n    type: HIDE_SUBMIT_GENRES,\n\n})\n\n\n\n// eg movie Rating >=5\nexport const filterByRating = (payload) => ({\n    type: FILTER_RATING,\n    payload\n\n})\n\n\n// eg movie Rating >=5\nexport const sortByPopular = () => ({\n    type: SORT_POPULAR\n\n})\n\n// dispatched from Loading View\nexport const getData = () => ({\n    type: GET_MOVIE_DATA\n})\n\nexport const getGenreData = () => ({\n    type: GET_GENRE_DATA\n})\n\n\n\n\n\n\n\n","import React from 'react';\nimport styled from 'styled-components';\nconst lightColor = \"#ec1515\";\n\nconst primaryFontFamily = \"league_gothicregular\";\n\n\nconst NavFooter = styled.div`\nposition:fixed;\nbottom:0;\n\n  width: 100%;\n  min-height: 30px;\n  overflow:hidden;\n  display: flex;\n  align-items: center;\n  background: rgba(33, 14, 14, 0.96);  \n  z-index:200;\n`;\n\n\n\nconst Title = styled.h1`\nwhite-space: nowrap;\n  font-size: 1.5rem;\n  text-align: center;\n  color: ${lightColor};\n  font-family: ${primaryFontFamily};\n  font-weight:bold;\n \n   padding-top:10px;\n  \n`;\n\n\nconst SiteFooterView = () => {\n\n\n\n    return (\n\n        <div className=\"row\">\n            <NavFooter>\n\n\n                <div className=\"col-8\">\n\n                    <Title>A CHRIS QUINN PRODUCTION    quinn.uk@gmail.com</Title>\n\n                </div>\n\n            </NavFooter>\n        </div>\n\n\n    )\n\n\n}\n\n\nexport default SiteFooterView;\n","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst primaryFontFamily = \"league_gothicregular\";\n\nconst StyledButton = styled.div`\n  background-color: ${(props) => props.active ? \"#000000\" : \"#000000\"};\n    color: ${(props) => props.active ? \"#ffffff\" : \"#f30a0a\"};\n   border-color: \"#ffffff\";\n   font-family: ${primaryFontFamily};\n   text-align:center;\n   font-size: 1.8em;\n   box-sizing:border-box;\n  margin-top: 1em;\n  padding: .06em 1em;\n cursor:pointer;\n  border:10px;\n  border-radius: 80px 1px;\n  overflow:hidden;\n\n\n`;\n\nconst FilterViewItem = ({ onClick, isActive, genreName, genreId }) => (\n\n    <div onClick={onClick} >\n        <StyledButton active={isActive}> {genreName}</StyledButton>\n    </div>\n\n\n)\n\nexport default FilterViewItem;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport styled from 'styled-components';\nimport FilterViewItem from \"./FilterViewItem\";\nimport { addGenre } from \"../actions/index\";\nimport {getGenreArray} from \"../selectors/index\";\n\n\n\n\n\n\n\n\nconst FilterContainer = styled.div`\n\ntext-transform: uppercase;\ndisplay:flex;\nflex-direction: column;\nwidth:40%;\n\n`;\n\n// collection component for each movie showing genre buttons\n\nclass FilterViewCollection extends React.Component {\n\n\n     render() {\n    \n        const onGenreClick = this.props.onGenreClick;\n\n         return (\n\n              <FilterContainer>\n\n                    {this.props.genres.map((genre,index) => (\n\n                  <FilterViewItem key={index} genreName={genre.name}  genreId={genre.id} isActive = {genre.active} onClick={() => onGenreClick({genre})} />\n\n                  \n                    ))}\n                </FilterContainer>\n        )\n\n    }\n}\n\nconst makeMapStateToProps = () => {\n    const getGenres = getGenreArray()\n    const mapStateToProps = (state, props) => {\n      return {\n        genres: getGenres(state, props)\n      }\n    }\n    return mapStateToProps\n  }\n  \n\n\nconst mapDispatchToProps = dispatch => ({\n    onGenreClick: genreObj => dispatch(addGenre(genreObj))\n})\n\n\n\n\n\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(FilterViewCollection);\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport star from '../../img/star.svg'\n\n\nconst primaryFontFamily = \"league_gothicregular\";\n\nconst StyledButton = styled.div`\n   padding:0;\n   margin:0;\n  \n   font-family: ${primaryFontFamily};\n   display:inline-block;\n   width:100%;\n   display:flex;\n   align-items:center;\n   justify-content:center;  \n   cursor:pointer;\n`;\n\nconst ImageDiv = styled.div`\n  width:150px;\n  height:150px;\n  position:absolute;\n  transform: scale(0.66);\n\n`;\n\nconst TextDiv = styled.div`\ntext-align:center;\ncolor:black;\nfont-size: 2em;\nposition:absolute;\n\n`;\n\n\n\n\n\n\n\n\nconst VotingButton = ({ onClick, isActive, voteScore}) => (\n\n    <StyledButton onClick={onClick} >\n     <ImageDiv><img src= {star} alt=\"star background\" /></ImageDiv>\n      <TextDiv>{voteScore}</TextDiv>\n    </StyledButton>\n\n\n)\n\nexport default VotingButton;","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from \"react-redux\";\nimport { filterByRating } from \"../actions/index\";\nimport FilterViewCollection from \"./FilterViewCollection\";\nimport VotingButton from \"./VotingButton\";\nimport { BASE_URL_IMAGE } from '../constants/site-constants';\nconst lightColor = \"#ffffff\";\nconst bgColor = \"#f30a0a\";\n\n\nconst primaryFontFamily = \"league_gothicregular\";\n\n\n\nconst MovieContainer = styled.div`\n    width: 40%;\n    height: 650px;\n    margin:5% 5%;\n    max-width:600px;\n    min-width:400px;\n    background-image: url(${props => (BASE_URL_IMAGE + props.poster_path)});\n    background-repeat:no-repeat;\n    background-size:cover;\n    background-color:${bgColor};\n    overflow:hidden;\n    display:flex;\n    flex-direction:column;\n    border:10px;\n    border-radius: 0px 74px 286px 0px;\n    box-shadow:10px 3px 33px 35px rgba(15,16,25,0.33);\n`;\n\n\nconst Title = styled.h2`\npadding-top:8%;\nposition:relative;\ntext-transform: uppercase;\nwidth:100%;\n  font-size: 4em;\n  text-align: center;\n  color: ${lightColor};\n  font-family: ${primaryFontFamily};\n  background-color: rgba(8, 3, 33, 0.5)\n\n\n`;\n\nconst RatingContainer = styled.div`\nwidth:100%;\n\ndisplay:flex;\njustify-content: center;\nflex-direction:row;\n`\n\n\n\n\n\nclass ListViewItem extends React.Component {\n\n    render() {\n        const {\n            title,\n            genre_ids,\n            poster_path,\n            vote_average,\n            popularity\n\n        } = this.props.item\n\n        const onClick = this.props.onClick;\n\n        console.log()\n\n        return (\n\n            <MovieContainer poster_path={poster_path}>\n            <div className=\"row\" >\n                    <Title>{title}</Title>\n                </div>\n\n                <div className=\"row\" >\n                    <FilterViewCollection genreIds={genre_ids} />\n                </div>\n                <RatingContainer>\n                    <VotingButton voteScore={vote_average} onClick={() => onClick({ vote_average })} />\n                    {/* <PopularIndexView popular={popularity} /> */}\n                </RatingContainer>\n\n\n            </MovieContainer>\n\n        );\n\n\n    }\n\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onClick: voteObj => dispatch(filterByRating(voteObj))\n})\n\nexport default connect(null, mapDispatchToProps)(ListViewItem);\n\n\n\n\n","import { connect } from \"react-redux\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport ListViewItem from \"./ListViewItem\";\nimport { getMovies } from '../selectors/index';\n\n\n\nconst MoviesContainer = styled.div`\ndisplay:flex;\njustify-content: center;\npadding:0;\nmargin:0;\n`;\n\n\nconst ListViewHolder = (props) => {\n\n    const movies = props.movies;\n    if (props.loadingMovieList === true || props.loadingGenres === true) {\n\n        return <div>Loading</div>\n    }\n    return (\n        <MoviesContainer className=\"row\">\n            {movies.map((movie,index) => (\n                <ListViewItem key={movie.id} item={movie} popular={index} />\n            ))}\n        </MoviesContainer>\n    )\n}\n\nconst mapStateToProps = (state) => {\n\n    return {\n        loadingMovieList: state.siteData.dataLoadingMovieList,\n        loadingGenres: state.siteData.dataLoadingGenreList,\n        movies: getMovies(state)\n\n    }\n\n};\n\nexport default connect(mapStateToProps)(ListViewHolder);","import React from 'react';\nimport styled from 'styled-components';\nimport ListViewHolder from './ListViewHolder';\nimport popcorn from '../../img/popcorn.svg'\n\nconst ViewContainerHolder = styled.div`\ndisplay:flex;\nflex-flow: row wrap;\npadding-top:100px;\npadding-bottom:100px;\n\njustify-content: center;\n\nbackground-image: url(${popcorn});\nbackground-repeat: repeat-y;\nbackground-size:contain;\n\n\n\n`;\n\n\nconst Flexcolumn = styled.div`\n  text-align: center;\n \n  width: ${(props) => props.size / 12 * 100}vw;\n`\n\n\n\nconst ViewContainer = () => (\n\n    <div className=\"row\" >\n\n        <ViewContainerHolder>\n        <Flexcolumn size={12}>\n        <ListViewHolder />\n        </Flexcolumn>\n      </ViewContainerHolder>\n    </div>\n\n\n)\n\nexport default ViewContainer;","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from \"react-redux\";\nimport { getData} from \"../actions/index\";\n\n\nconst ItemsContainer = styled.div`\n    display:flex;\n`;\n\nfunction LoadingView () {\n    return (\n        <ItemsContainer className =\"row\">\n         Loading...\n          </ItemsContainer>\n    )\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return dispatch(getData());\n}\n\nexport default connect(null,mapDispatchToProps)(LoadingView);\n\n","import React from 'react';\nimport '../../styles/index.css';\nimport SiteHeaderView from './SiteHeaderView';\nimport SiteFooterView from './SiteFooterView';\nimport ViewContainer from './ViewContainer';\nimport LoadingView from './LoadingView';\n\n\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n     <LoadingView />\n      <ViewContainer />\n      <SiteHeaderView />\n      <SiteFooterView />\n    </div>\n  );\n}\n\nexport default App;\n","\nimport * as types from '../constants/action-types'\n\n\nconst initialState = {\n    dataLoadingMovieList: true,\n    dataLoadingGenreList: true,\n    movieList: [],\n    genresList: [],\n    error:{}\n\n};\n\n\nfunction siteData(state = initialState, action) {\n\n    let array\n\n\n    switch (action.type) {\n\n        case types.MOVIE_LIST_DATA_LOADED:\n            array = action.payload.results;\n            return { ...state, movieList: array, dataLoadingMovieList: false }\n\n        case types.MOVIE_GENRES_DATA_LOADED:\n            array = action.payload.genres;\n            return { ...state, genresList: array, dataLoadingGenreList: false }\n\n\n        case types.API_ERRORED_MOVIE_LIST:\n\n            console.log('API_ERRORED_MOVIE_LIST')\n            return{ ...state,error:action.error}\n\n        case types.API_ERRORED_GENRE_LIST:\n\n            console.log('API_ERRORED_GENRE_LIST')\n            return{ ...state,error:action.error}\n\n        default:\n            return state\n    }\n\n}\n\nexport default siteData;\n\n\n","\nimport * as types from '../constants/action-types'\nimport { STATE_POPULAR, STATE_FILTERED, STATE_RATING } from '../constants/site-constants'\n\n\n\n\nconst initialState = {\n\n    genresSelectedList: [], // stores full genre properties\n    genresSelectedIdArray: [], // stores only ids for faster searching\n    ratingScore: [],\n    filterState: STATE_POPULAR\n};\n\n\nfunction filteredData(state = initialState, action) {\n    switch (action.type) {\n\n        case types.ADD_REMOVE_GENRE:\n\n            // check if already selected - if already selected, remove it\n\n            let searchIndex = state.genresSelectedIdArray.indexOf(action.payload.genre.id);\n\n            if (searchIndex !== -1) {\n\n                return { ...state, genresSelectedList: state.genresSelectedList.filter(item => item.id !== action.payload.genre.id), genresSelectedIdArray: state.genresSelectedIdArray.filter(item => item !== action.payload.genre.id) }\n            }\n\n            // otherwise add to state\n\n            return { ...state, genresSelectedList: [...state.genresSelectedList, action.payload.genre], genresSelectedIdArray: [...state.genresSelectedIdArray, action.payload.genre.id], filterState: STATE_FILTERED }\n\n        case types.FILTER_RATING:\n\n            return { ...state, ratingScore: [...state.ratingScore, action.payload.vote_average], genresSelectedList: [], filterState: STATE_RATING }\n\n        case types.SWITCH_SITE_STATE:\n\n            return { ...state, ...initialState } // reset\n\n        default:\n            return state\n    }\n\n}\n\nexport default filteredData;\n\n\n","  \nimport { combineReducers } from 'redux'\nimport siteData from './siteData';\nimport filteredData from './filteredData';\n\n\n\nexport default combineReducers({\n    siteData,\n    filteredData,\n   \n  })","import { GET_MOVIE_DATA, MOVIE_LIST_DATA_LOADED, API_ERRORED_MOVIE_LIST, MOVIE_GENRES_DATA_LOADED, API_ERRORED_GENRE_LIST } from \"../constants/action-types\";\n\nimport {  takeLatest, call, put, all } from \"redux-saga/effects\";\n\nimport axios from 'axios';\n\n\n\n\n// the 'watcher' - on every 'DATA_REQUESTED' action, run our side effect\nfunction* watcherGetMovieList() {\n    yield takeLatest(GET_MOVIE_DATA, fetchMovieList);\n    yield takeLatest(GET_MOVIE_DATA, fetchMovieGenresList);\n\n\n}\nfunction* fetchMovieList() {\n\n\n\n    try {\n        const payload = yield call(getMovieListRequest)\n\n        yield put({ type: MOVIE_LIST_DATA_LOADED, payload })\n\n    } catch (error) {\n        yield put({ type: API_ERRORED_MOVIE_LIST, error })\n\n    }\n\n}\n\nconst getMovieListRequest = () => {\n\n   \n    const url = \"https://api.themoviedb.org/3/movie/now_playing?api_key=\" + process.env.REACT_APP_API_KEY + \"&language=en-US&page=1\";\n    return axios.get(url).then(response =>\n        response.data\n    );\n}\n\n\n\nfunction* fetchMovieGenresList() {\n\n    try {\n        const payload = yield call(getMovieGenresRequest)\n\n        yield put({ type: MOVIE_GENRES_DATA_LOADED, payload })\n    } catch (error) {\n        yield put({ type: API_ERRORED_GENRE_LIST, error })\n\n    }\n\n}\n\nconst getMovieGenresRequest = () => {\n    const url = \"https://api.themoviedb.org/3/genre/movie/list?api_key=\" + process.env.REACT_APP_API_KEY + \"&language=en-US\";\n    return axios.get(url).then(response =>\n        response.data\n    );\n}\n\n\n\nexport default function* rootSaga() {\n    yield all([\n        watcherGetMovieList()\n\n    ])\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas/api-saga\";\n\nconst initialiseSagaMiddleware = createSagaMiddleware();\n\n// const storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        }) : compose;\n\n\nconst enhancer = composeEnhancers(\n    applyMiddleware( initialiseSagaMiddleware),\n\n    // other store enhancers if any\n);\n\nconst store = createStore(rootReducer, enhancer);\n\n\n\ninitialiseSagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport { render } from \"react-dom\";\n\nimport App from './js/components/App';\nimport { Provider } from \"react-redux\";\nimport store from \"./js/store/index\";\nimport './styles/index.css';\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}