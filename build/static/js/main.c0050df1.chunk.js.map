{"version":3,"sources":["img/clapperBoard.svg","img/star.svg","img/popcorn.svg","js/components/BackButton.js","js/constants/action-types.js","js/constants/site-constants.js","js/selectors/index.js","js/components/SiteHeaderView.js","js/actions/index.js","js/components/SiteFooterView.js","js/components/FilterViewItem.js","js/components/FilterViewCollection.js","js/components/VotingButton.js","js/components/ListViewItem.js","js/components/ListViewHolder.js","js/components/ViewContainer.js","js/components/LoadingView.js","js/components/App.tsx","js/reducers/siteData.js","js/reducers/filteredData.js","js/reducers/index.js","js/sagas/api-saga.js","js/store/index.js","index.tsx"],"names":["module","exports","StyledButton","styled","div","Title","h1","TitleCTA","SubmitLogo","clapperBoard","BackButton","onClick","isActive","text","className","active","GET_MOVIE_DATA","SWITCH_SITE_STATE","MOVIE_LIST_DATA_LOADED","MOVIE_GENRES_DATA_LOADED","API_ERRORED_MOVIE_LIST","API_ERRORED_GENRE_LIST","ADD_GENRE","FILTER_RATING","STATE_POPULAR","STATE_FILTERED","STATE_RATING","selectedGenres","state","filteredData","genresSelectedList","getGenre","props","filterCollectionarray","genreIds","forEach","element","genreObj","id","siteData","genresList","find","getGenreObjFromId","push","getSelectedGenresByName","createSelector","genres","_","map","join","getMovies","movieList","filterState","ratingScore","siteState","rating","orderBy","length","genresIdArray","filteredArray","movie","movieGenreIds","genre_ids","every","v","includes","ratingsArray","filter","vote_average","console","log","NavHeader","connect","loadingMovieList","dataLoadingMovieList","loadingGenres","dataLoadingGenreList","dispatch","onSubmitClick","type","NavFooter","SiteFooterView","FilterViewItem","genreName","genreId","FilterContainer","FilterViewCollection","onGenreClick","this","genre","index","key","name","React","Component","getGenres","genreArray","payload","ImageDiv","TextDiv","VotingButton","voteScore","src","star","MovieContainer","poster_path","h2","RatingContainer","ListViewItem","item","title","popularity","voteObj","MoviesContainer","movies","popular","ViewContainerHolder","popcorn","Flexcolumn","size","ViewContainer","ItemsContainer","App","initialState","action","types","results","indexOf","combineReducers","watcherGetMovieList","fetchMovieList","fetchMovieGenresList","rootSaga","takeLatest","call","getMovieListRequest","put","error","axios","get","then","response","data","getMovieGenresRequest","all","initialiseSagaMiddleware","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","rootReducer","run","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0050df1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clapperBoard.3feec74b.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.a284c655.svg\";","module.exports = __webpack_public_path__ + \"static/media/popcorn.333c8689.svg\";","import React from 'react';\nimport styled from 'styled-components'\nimport clapperBoard from '../../img/clapperBoard.svg'\n\n\nconst primaryFontFamily = \"league_gothicregular\";\nconst bgColor = \"#f30a0a\";\nconst textColor = \"#ffffff\";\n\n\nconst StyledButton = styled.div`\n\ndisplay:flex;\njustify-content: center;\nalign-items: center;\nbackground: rgba(33, 14, 14, 0.96);  \nbox-sizing:border-box;\n\nmargin: 0;\npadding: .25em 1.5em;\ncursor:pointer;\n\n\nfont-family: ${primaryFontFamily};\ntext-transform: uppercase;\noverflow:hidden;\n\nborder-radius: 80px 1px;\n\n\nbox-shadow: -28px 18px 85px 32px rgba(245,7,7,0.75)\n\n`;\n\nconst Title = styled.h1`\n  font-size:calc(18px + 1vw);\n  margin-right:5%;\n color: ${textColor};\n  text-align:right;\nline-height:1em;\n  //  white-space: nowrap;\n`;\n\nconst TitleCTA = styled(Title)`\n  color: black;\n  text-align: left;\n  font-size:calc(24px + 1vw);\n  margin-top:60%;\n  margin-right:0;\n  margin-left:10%;\n \n`;\n\n\nconst SubmitLogo = styled.div`\n\nmin-width:100px;\nheight:inherit;\ndisplay:block;\n\nbackground-image: url(${clapperBoard});\nbackground-repeat: no-repeat;\n\n\n\n`\n\n\n\nconst ctaText = \"CUT!\"\n\nconst BackButton = ({ onClick, isActive, text }) => (\n\n  <div className=\"row\" onClick={onClick} >\n\n    <StyledButton active={isActive}>\n      <Title> {text}</Title>\n      <SubmitLogo>\n        <TitleCTA> {ctaText}</TitleCTA>\n      </SubmitLogo>\n    </StyledButton>\n\n  </div>\n\n\n\n)\n\n\n\n\nexport default BackButton;","\nexport const GET_MOVIE_DATA=\"GET_MOVIE_DATA\";\n\nexport const GET_GENRE_DATA=\"GET_GENRE_DATA\";\n\nexport const SWITCH_SITE_STATE=\"SWITCH_SITE_STATE\";\n\nexport const SHOW_SUBMIT_GENRES=\"SHOW_SUBMIT_GENRES\";\n\nexport const HIDE_SUBMIT_GENRES=\"HIDE_SUBMIT_GENRES\";\n\nexport const MOVIE_LIST_DATA_LOADED=\"MOVIE_LIST_DATA_LOADED\";\n\nexport const MOVIE_GENRES_DATA_LOADED=\"MOVIE_GENRES_DATA_LOADED\";\n\nexport const API_ERRORED_MOVIE_LIST =\"API_ERRORED_MOVIE_LIST\";\n\nexport const API_ERRORED_GENRE_LIST =\"API_ERRORED_GENRE_LIST\";\n\nexport const APP_READY =\"APP_READY\";\n\nexport const ADD_GENRE = \"ADD_GENRE\";\n\nexport const FILTER_RATING = \"FILTER_RATING\";\n\nexport const SORT_POPULAR = \"SORT_POPULAR\";\n\n\n\n\n"," export const BASE_URL_IMAGE = \"https://image.tmdb.org/t/p/w500/\";\n\n\n // site states\n export const STATE_POPULAR =\"STATE_POPULAR\";\n\n export const STATE_FILTERED =\"STATE_FILTERED\";\n\n export const STATE_RATING =\"STATE_RATING\";\n\n","import { createSelector } from \"reselect\";\nimport _ from 'lodash';\nimport { STATE_POPULAR, STATE_FILTERED, STATE_RATING } from '../constants/site-constants'\n\n\nconst movieList = (state) => state.siteData.movieList; // selector for movie genres\n\nconst selectedGenres = (state) => state.filteredData.genresSelectedList; // selector genres for filtering\n\nconst ratingScore = (state) => state.filteredData.ratingScore; // selector ratings for filtering\n\nconst siteState = (state) => state.filteredData.filterState;\n\n\n\nconst separator = \" - \";\n\n\nconst getGenreObjFromId = (id, state) => {\n\n    let result = state.siteData.genresList.find(element => element.id === id);\n\n    return result;\n\n}\n\n\nconst getGenre = (state, props) => {\n\n    let filterCollectionarray = [];\n\n    props.genreIds.forEach(element => {\n\n        let genreObj = getGenreObjFromId(element, state);\n\n        filterCollectionarray.push(genreObj);\n\n    });\n\n    return filterCollectionarray;\n\n}\n\n\nexport const getGenreArray = () => {\n    return createSelector(\n        [getGenre],\n        (genreArray) => {\n            return genreArray;\n        }\n    )\n\n\n}\n\nexport const getSelectedGenresByName = createSelector(\n    [selectedGenres],\n    (genres) => {\n        return _.map(genres, 'name').join(separator);\n\n    }\n)\n\nconst getIntersection = (arr1, arr2) => {\n\n    // arr1:movielist.genres id\n    // arr2: selected genres id\n\n    return _.intersection(arr1, arr2);\n}\n\n\n\n\n\n\nexport const getMovies = createSelector(\n    [selectedGenres, movieList, siteState, ratingScore],\n    (genres, movieList, siteState, rating) => {\n\n        let resultArray;\n\n        switch (siteState) {\n\n            case STATE_POPULAR:\n                // return movielist sorted on popularity\n\n                resultArray = _.map(_.orderBy(movieList, 'popularity', 'desc'));\n\n                return resultArray;\n\n\n            case STATE_FILTERED:\n\n                if (genres.length < 1) return movieList;\n\n                let genresIdArray = _.map(genres, 'id'); // get ids for each genre\n\n                let filteredArray = [];\n\n                // need to check intersection meets ALL conditions of selected genres\n                // either can filter complete movieList\n                // or filter previous filtered array for new condition\n\n\n                movieList.forEach(movie => {\n\n                    let movieGenreIds = movie.genre_ids;\n\n\n                    let result = genresIdArray.every(v => movieGenreIds.includes(v));\n\n                    if (result) {\n                        filteredArray.push(movie);\n                    }\n\n\n\n                }\n\n                )\n\n                return filteredArray;\n\n            case STATE_RATING:\n\n                // only show movies equal or above rating\n\n                let ratingsArray = _.map(_.orderBy(movieList, 'vote_average', 'desc'));\n\n                resultArray = _.filter(ratingsArray, ({ vote_average }) => vote_average >= rating)\n\n                return resultArray\n\n            default:\n\n                console.log('GET MOVIES DEFAULT')\n                return movieList;\n        }\n\n    })\n\n\n\n\n\n\n\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport styled from 'styled-components';\nimport BackButton from './BackButton';\nimport { switchState } from \"../actions/index\";\nimport { getSelectedGenresByName } from \"../selectors\"\n\nconst lightColor = \"#ec1515\";\n\nconst primaryFontFamily = \"league_gothicregular\";\n\n\nconst NavHeader = styled.div`\nposition:fixed;\ntop:0;\n\n  width: 100%;\n  min-height: 30px;\n  overflow:hidden;\n  display: flex;\n  align-items: center;\n  background: rgba(33, 14, 14, 0.96); \n  z-index:200;\n`;\n\n\n\nconst Title = styled.h1`\nwhite-space: nowrap;\n  font-size: 4.5rem;\n  text-align: center;\n  color: ${lightColor};\n  font-family: ${primaryFontFamily};\n  font-weight:bold;\n \n   padding-top:30px;\n  \n`;\n\n\n\n\n\nconst SiteHeaderView = (props) => {\n\n\n    const onSubmitClick = props.onSubmitClick;\n    const getSelectedGenresByName = props.getSelectedGenresByName;\n\n    if (props.loadingMovieList === true || props.loadingGenres === true) {\n\n        return <div>Loading</div>\n    }\n\n\n\n    if (getSelectedGenresByName.length > -1) {\n\n\n\n        return (\n\n            <div className=\"row\">\n                <NavHeader>\n\n                    <div className=\"col-8\">\n\n                        <Title>POP MY CORN...PUNK</Title>\n\n                    </div>\n\n                    <div className=\"col-4\">\n\n                        <BackButton text={getSelectedGenresByName} onClick={() => onSubmitClick()} />\n\n                    </div>\n\n                </NavHeader>\n            </div>\n\n\n        )\n\n    }\n\n    return null;\n\n}\n\n\nconst mapStateToProps = state => ({\n    loadingMovieList: state.siteData.dataLoadingMovieList,\n    loadingGenres: state.siteData.dataLoadingGenreList,\n    getSelectedGenresByName: getSelectedGenresByName(state)\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmitClick: id => dispatch(switchState())\n})\n\n\n\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SiteHeaderView);\n\n\n","//action creators\n\nimport { GET_MOVIE_DATA, GET_GENRE_DATA, ADD_GENRE, SHOW_SUBMIT_GENRES, HIDE_SUBMIT_GENRES, FILTER_RATING, SORT_POPULAR, SWITCH_SITE_STATE } from \"../constants/action-types\";\n\n// eg Action and Drama\nexport const addGenre = (payload) => ({\n    type: ADD_GENRE,\n    payload\n\n})\n\nexport const switchState = () => ({\n    type: SWITCH_SITE_STATE\n\n})\n\nexport const showSubmitGenres = () => ({\n    type: SHOW_SUBMIT_GENRES,\n\n})\n\nexport const hideSubmitGenres = () => ({\n    type: HIDE_SUBMIT_GENRES,\n\n})\n\n\n\n// eg movie Rating >=5\nexport const filterByRating = (payload) => ({\n    type: FILTER_RATING,\n    payload\n\n})\n\n\n// eg movie Rating >=5\nexport const sortByPopular = () => ({\n    type: SORT_POPULAR\n\n})\n\n// dispatched from Loading View\nexport const getData = () => ({\n    type: GET_MOVIE_DATA\n})\n\nexport const getGenreData = () => ({\n    type: GET_GENRE_DATA\n})\n\n\n\n\n\n\n\n","import React from 'react';\nimport styled from 'styled-components';\nconst lightColor = \"#ec1515\";\n\nconst primaryFontFamily = \"league_gothicregular\";\n\n\nconst NavFooter = styled.div`\nposition:fixed;\nbottom:0;\n\n  width: 100%;\n  min-height: 30px;\n  overflow:hidden;\n  display: flex;\n  align-items: center;\n  background: rgba(33, 14, 14, 0.96);  \n  z-index:200;\n`;\n\n\n\nconst Title = styled.h1`\nwhite-space: nowrap;\n  font-size: 1.5rem;\n  text-align: center;\n  color: ${lightColor};\n  font-family: ${primaryFontFamily};\n  font-weight:bold;\n \n   padding-top:10px;\n  \n`;\n\n\nconst SiteFooterView = () => {\n\n\n\n    return (\n\n        <div className=\"row\">\n            <NavFooter>\n\n\n                <div className=\"col-8\">\n\n                    <Title>A CHRIS QUINN PRODUCTION    quinn.uk@gmail.com</Title>\n\n                </div>\n\n            </NavFooter>\n        </div>\n\n\n    )\n\n\n}\n\n\nexport default SiteFooterView;\n","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst primaryFontFamily = \"league_gothicregular\";\n\nconst StyledButton = styled.div`\n  background-color: ${(props) => props.active ? \"#000000\" : \"#000000\"};\n    color: ${(props) => props.active ? \"#ffffff\" : \"#f30a0a\"};\n   border-color: \"#ffffff\";\n   font-family: ${primaryFontFamily};\n   text-align:center;\n   font-size: 1.8em;\n   box-sizing:border-box;\n  margin-top: 1em;\n  padding: .06em 1em;\n cursor:pointer;\n  border:10px;\n  border-radius: 80px 1px;\n  overflow:hidden;\n\n\n`;\n\nconst FilterViewItem = ({ onClick, isActive, genreName, genreId }) => (\n\n    <div onClick={onClick} >\n        <StyledButton active={isActive}> {genreName}</StyledButton>\n    </div>\n\n\n)\n\nexport default FilterViewItem;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport styled from 'styled-components';\nimport FilterViewItem from \"./FilterViewItem\";\nimport { addGenre } from \"../actions/index\";\nimport {getGenreArray} from \"../selectors/index\";\n\n\n\n\n\n\n\n\nconst FilterContainer = styled.div`\n\ntext-transform: uppercase;\ndisplay:flex;\nflex-direction: column;\nwidth:40%;\n\n`;\n\n// collection component for each movie showing genre buttons\n\nclass FilterViewCollection extends React.Component {\n\n\n     render() {\n    \n        const onGenreClick = this.props.onGenreClick;\n\n         return (\n\n              <FilterContainer>\n\n                    {this.props.genres.map((genre,index) => (\n\n                  <FilterViewItem key={index} genreName={genre.name} genreId={genre.id} onClick={() => onGenreClick({genre})} />\n\n                  \n                    ))}\n                </FilterContainer>\n        )\n\n    }\n}\n\nconst makeMapStateToProps = () => {\n    const getGenres = getGenreArray()\n    const mapStateToProps = (state, props) => {\n      return {\n        genres: getGenres(state, props)\n      }\n    }\n    return mapStateToProps\n  }\n  \n\n\nconst mapDispatchToProps = dispatch => ({\n    onGenreClick: genreObj => dispatch(addGenre(genreObj))\n})\n\n\n\n\n\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(FilterViewCollection);\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport star from '../../img/star.svg'\n\n\nconst primaryFontFamily = \"league_gothicregular\";\n\nconst StyledButton = styled.div`\n   padding:0;\n   margin:0;\n  \n   font-family: ${primaryFontFamily};\n   display:inline-block;\n   width:100%;\n   display:flex;\n   align-items:center;\n   justify-content:center;  \n   cursor:pointer;\n`;\n\nconst ImageDiv = styled.div`\n  width:150px;\n  height:150px;\n  position:absolute;\n  transform: scale(0.66);\n\n`;\n\nconst TextDiv = styled.div`\ntext-align:center;\ncolor:white;\nfont-size: 3em;\nposition:absolute;\n`;\n\n\n\n\n\n\n\n\nconst VotingButton = ({ onClick, isActive, voteScore}) => (\n\n    <StyledButton onClick={onClick} >\n     <ImageDiv><img src= {star} /></ImageDiv>\n      <TextDiv>{voteScore}</TextDiv>\n    </StyledButton>\n\n\n)\n\nexport default VotingButton;","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from \"react-redux\";\nimport { filterByRating } from \"../actions/index\";\nimport FilterViewCollection from \"./FilterViewCollection\";\nimport VotingButton from \"./VotingButton\";\n//import PopularIndexView from \"./PopularIndexView\";\nimport { BASE_URL_IMAGE } from '../constants/site-constants';\nconst lightColor = \"#ffffff\";\nconst bgColor = \"#f30a0a\";\n\n\nconst primaryFontFamily = \"league_gothicregular\";\n\n\n\nconst MovieContainer = styled.div`\n    width: 40%;\n    height: 650px;\n    margin:5% 5%;\n    max-width:600px;\n    min-width:400px;\n    background-image: url(${props => (BASE_URL_IMAGE + props.poster_path)});\n    background-repeat:no-repeat;\n    background-size:cover;\n    background-color:${bgColor};\n    overflow:hidden;\n    display:flex;\n    flex-direction:column;\n    border:10px;\n    border-radius: 0px 74px 286px 0px;\n    box-shadow:10px 3px 33px 35px rgba(15,16,25,0.33);\n`;\n\n\nconst Title = styled.h2`\npadding-top:8%;\nposition:relative;\ntext-transform: uppercase;\nwidth:100%;\n  font-size: 4em;\n  text-align: center;\n  color: ${lightColor};\n  font-family: ${primaryFontFamily};\n  background-color: rgba(8, 3, 33, 0.5)\n\n\n`;\n\nconst RatingContainer = styled.div`\nwidth:100%;\n\ndisplay:flex;\njustify-content: center;\nflex-direction:row;\n`\n\n\n\n\n\nclass ListViewItem extends React.Component {\n\n    render() {\n        const {\n            title,\n            genre_ids,\n            poster_path,\n            vote_average,\n            popularity\n\n        } = this.props.item\n\n        const onClick = this.props.onClick;\n\n        return (\n\n            <MovieContainer poster_path={poster_path}>\n            <div className=\"row\" >\n                    <Title>{title}</Title>\n                </div>\n\n                <div className=\"row\" >\n                    <FilterViewCollection genreIds={genre_ids} />\n                </div>\n                <RatingContainer>\n                    <VotingButton voteScore={vote_average} onClick={() => onClick({ vote_average })} />\n                    {/* <PopularIndexView popular={popularity} /> */}\n                </RatingContainer>\n\n\n            </MovieContainer>\n\n        );\n\n\n    }\n\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onClick: voteObj => dispatch(filterByRating(voteObj))\n})\n\nexport default connect(null, mapDispatchToProps)(ListViewItem);\n\n\n\n\n","import { connect } from \"react-redux\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport ListViewItem from \"./ListViewItem\";\nimport { getMovies } from '../selectors/index';\n\n\n\nconst MoviesContainer = styled.div`\ndisplay:flex;\njustify-content: center;\npadding:0;\nmargin:0;\n`;\n\n\nconst ListViewHolder = (props) => {\n\n    const movies = props.movies;\n    if (props.loadingMovieList === true || props.loadingGenres === true) {\n\n        return <div>Loading</div>\n    }\n    return (\n        <MoviesContainer className=\"row\">\n            {movies.map((movie,index) => (\n                <ListViewItem key={movie.id} item={movie} popular={index} />\n            ))}\n        </MoviesContainer>\n    )\n}\n\nconst mapStateToProps = (state) => {\n\n    return {\n        loadingMovieList: state.siteData.dataLoadingMovieList,\n        loadingGenres: state.siteData.dataLoadingGenreList,\n        movies: getMovies(state)\n\n    }\n\n};\n\nexport default connect(mapStateToProps)(ListViewHolder);","import React from 'react';\nimport styled from 'styled-components';\nimport ListViewHolder from './ListViewHolder';\nimport popcorn from '../../img/popcorn.svg'\n\nconst ViewContainerHolder = styled.div`\ndisplay:flex;\nflex-flow: row wrap;\npadding-top:100px;\npadding-bottom:100px;\n\njustify-content: center;\n\nbackground-image: url(${popcorn});\nbackground-repeat: repeat-y;\nbackground-size:contain;\n\n\n\n`;\n\n\nconst Flexcolumn = styled.div`\n  text-align: center;\n \n  width: ${(props) => props.size / 12 * 100}vw;\n`\n\n\n\nconst ViewContainer = () => (\n\n    <div className=\"row\" >\n\n        <ViewContainerHolder>\n        <Flexcolumn size={12}>\n        <ListViewHolder />\n        </Flexcolumn>\n      </ViewContainerHolder>\n    </div>\n\n\n)\n\nexport default ViewContainer;","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from \"react-redux\";\nimport { getData} from \"../actions/index\";\n\n\nconst ItemsContainer = styled.div`\n    display:flex;\n`;\n\nfunction LoadingView () {\n    return (\n        <ItemsContainer className =\"row\">\n         Loading...\n          </ItemsContainer>\n    )\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return dispatch(getData());\n}\n\nexport default connect(null,mapDispatchToProps)(LoadingView);\n\n","import React from 'react';\nimport '../../styles/index.css';\nimport SiteHeaderView from './SiteHeaderView';\nimport SiteFooterView from './SiteFooterView';\nimport ViewContainer from './ViewContainer';\nimport LoadingView from './LoadingView';\n\n\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n     <LoadingView />\n      <ViewContainer />\n      <SiteHeaderView />\n      <SiteFooterView />\n    </div>\n  );\n}\n\nexport default App;\n","\nimport * as types from '../constants/action-types'\n\n\nconst initialState = {\n    dataLoadingMovieList: true,\n    dataLoadingGenreList: true,\n    movieList: [],\n    genresList: []\n\n};\n\n\nfunction siteData(state = initialState, action) {\n\n    let array\n\n\n    switch (action.type) {\n\n        case types.MOVIE_LIST_DATA_LOADED:\n            array = action.payload.results;\n            return { ...state, movieList: array, dataLoadingMovieList: false }\n\n        case types.MOVIE_GENRES_DATA_LOADED:\n            array = action.payload.genres;\n            return { ...state, genresList: array, dataLoadingGenreList: false }\n\n\n        case types.API_ERRORED_MOVIE_LIST:\n\n            console.log('API_ERRORED_MOVIE_LIST')\n            return\n\n        case types.API_ERRORED_GENRE_LIST:\n\n            console.log('API_ERRORED_GENRE_LIST')\n            return\n\n        default:\n            return state\n    }\n\n}\n\nexport default siteData;\n\n\n","\nimport * as types from '../constants/action-types'\nimport { STATE_POPULAR, STATE_FILTERED, STATE_RATING } from '../constants/site-constants'\nimport _ from 'lodash';\n\n\n\nconst initialState = {\n\n    genresSelectedList: [],\n    ratingScore: [],\n    filterState: STATE_POPULAR\n};\n\n\nfunction filteredData(state = initialState, action) {\n    switch (action.type) {\n\n        case types.ADD_GENRE:\n\n            let genresIdArray = _.map(state.genresSelectedList, 'id'); // get ids for each gene to check not in state\n\n            if (genresIdArray.indexOf(action.payload.genre.id) !== -1) {\n                return state\n            }\n\n            return { ...state, genresSelectedList: [...state.genresSelectedList, action.payload.genre], filterState: STATE_FILTERED }\n\n\n\n        case types.FILTER_RATING:\n\n        return { ...state, ratingScore: [...state.ratingScore, action.payload.vote_average], filterState: STATE_RATING }\n\n        case types.SWITCH_SITE_STATE:\n\n            return { ...state, genresSelectedList: [], filterState: STATE_POPULAR }\n\n        default:\n            return state\n    }\n\n}\n\nexport default filteredData;\n\n\n","  \nimport { combineReducers } from 'redux'\nimport siteData from './siteData';\nimport filteredData from './filteredData';\n\n\n\nexport default combineReducers({\n    siteData,\n    filteredData,\n   \n  })","import { GET_MOVIE_DATA, MOVIE_LIST_DATA_LOADED, API_ERRORED_MOVIE_LIST, MOVIE_GENRES_DATA_LOADED, API_ERRORED_GENRE_LIST } from \"../constants/action-types\";\n\nimport {  takeLatest, call, put, all } from \"redux-saga/effects\";\n\nimport axios from 'axios';\n\n\n\n\n// the 'watcher' - on every 'DATA_REQUESTED' action, run our side effect\nfunction* watcherGetMovieList() {\n    yield takeLatest(GET_MOVIE_DATA, fetchMovieList);\n    yield takeLatest(GET_MOVIE_DATA, fetchMovieGenresList);\n\n\n}\nfunction* fetchMovieList() {\n\n\n\n    try {\n        const payload = yield call(getMovieListRequest)\n\n        yield put({ type: MOVIE_LIST_DATA_LOADED, payload })\n\n    } catch (error) {\n        yield put({ type: API_ERRORED_MOVIE_LIST, error })\n\n    }\n\n}\n\nconst getMovieListRequest = () => {\n\n   \n    const url = \"https://api.themoviedb.org/3/movie/now_playing?api_key=\" + process.env.REACT_APP_API_KEY + \"&language=en-US&page=1\";\n    return axios.get(url).then(response =>\n        response.data\n    );\n}\n\n\n\nfunction* fetchMovieGenresList() {\n\n    try {\n        const payload = yield call(getMovieGenresRequest)\n\n        yield put({ type: MOVIE_GENRES_DATA_LOADED, payload })\n    } catch (error) {\n        yield put({ type: API_ERRORED_GENRE_LIST, error })\n\n    }\n\n}\n\nconst getMovieGenresRequest = () => {\n    const url = \"https://api.themoviedb.org/3/genre/movie/list?api_key=\" + process.env.REACT_APP_API_KEY + \"&language=en-US\";\n    return axios.get(url).then(response =>\n        response.data\n    );\n}\n\n\n\nexport default function* rootSaga() {\n    yield all([\n        watcherGetMovieList()\n\n    ])\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas/api-saga\";\n\nconst initialiseSagaMiddleware = createSagaMiddleware();\n\n// const storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        }) : compose;\n\n\nconst enhancer = composeEnhancers(\n    applyMiddleware( initialiseSagaMiddleware),\n\n    // other store enhancers if any\n);\n\nconst store = createStore(rootReducer, enhancer);\n\n\n\ninitialiseSagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport { render } from \"react-dom\";\n\nimport App from './js/components/App';\nimport { Provider } from \"react-redux\";\nimport store from \"./js/store/index\";\nimport './styles/index.css';\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}